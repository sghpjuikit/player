/* 
    Document    : Default
    Author      : Martin Polakovic
    Year        : 2014
    Description : Skin reference
*/

/*
 * MODENA Copyright
 * Copyright (c) 2009, 2013, Oracle and/or its affiliates. All rights reserved. 
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER. 
 *  
 * This code is free software; you can redistribute it and/or modify it 
 * under the terms of the GNU General Public License version 2 only, as 
 * published by the Free Software Foundation.  Oracle designates this 
 * particular file as subject to the "Classpath" exception as provided 
 * by Oracle in the LICENSE file that accompanied this code. 
 *  
 * This code is distributed in the hope that it will be useful, but WITHOUT 
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or 
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License 
 * version 2 for more details (a copy is included in the LICENSE file that 
 * accompanied this code). 
 *  
 * You should have received a copy of the GNU General Public License version 
 * 2 along with this work; if not, write to the Free Software Foundation, 
 * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA. 
 *  
 * Please contact Oracle, 500 Oracle Parkway, Redwood Shores, CA 94065 USA 
 * or visit www.oracle.com if you need additional information or have any 
 * questions.
 *                                                                              
 */

/*  

    Content: 

        JAVA OFFICIAL ELEMENTS:          line 50
        APPLICATION SPECIFIC CONTROLS:  line 3200

    Complete JavaFX CSS Reference Guide at : 
        http://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html

*/




/*******************************************************************************
 *                                                                             *
 * CSS Styles for core infrastructure bits.  The .root section provides the    *
 * overall default colors used by the rest of the sections.                    *
 *                                                                             *
 ******************************************************************************/

.root {
    
    -fx-font-family: "Arial";
    -fx-font-size: 11;
    
    /*global variables*/
    -fx-def-font-color: rgb(190, 190, 195);
    -fx-def-font-color-hover: rgb(235,235,230);
    -fx-sel-font-color: rgb(175, 175, 176);
    -fx-prompt-font-color: rgba(165, 165, 165, 0.4);
    -fx-color-darker: rgba(0,0,0,0.2);
    -fx-color-lighter: rgba(180,200,255,0.08);

    /* default color for panels such as header or widget area or other areas. 
       Panel is equivalent to java's .filler i suppose. */
    /* when changing this value be aware that .header class emulates it manually
       be sure to change it there too*/
    -fx-pane-color: rgba(0,0,0,0.32);
    /* Darker version of pane color. By default used for :dragged pseudoclass */
    -fx-pane-color-dragged: rgba(0,0,0,0.5);
    /* Default bgr color for tooltips and popups. */
    -fx-popup-def-bgr-color: rgba(28,42,60,0.9);
    
    /***************************************************************************
     *                                                                         *
     * The main color palette from which the rest of the colors are derived.   *
     *                                                                         *
     **************************************************************************/

    /* A light grey that is the base color for objects.  Instead of using
     * -fx-base directly, the sections in this file will typically use -fx-color.
     */
    -fx-base: #ececec;

    /* A very light grey used for the background of windows.  See also
     * -fx-text-background-color, which should be used as the -fx-text-fill
     * value for text painted on top of backgrounds colored with -fx-background.
     */
    -fx-background: derive(-fx-base,26.4%);

    /* Used for the inside of text boxes, password boxes, lists, trees, and
     * tables.  See also -fx-text-inner-color, which should be used as the
     * -fx-text-fill value for text painted on top of backgrounds colored
     * with -fx-control-inner-background.
     */
    -fx-control-inner-background: derive(-fx-base,80%);
    /* Version of -fx-control-inner-background for alternative rows */
    -fx-control-inner-background-alt: derive(-fx-control-inner-background,-2%);

    /* One of these colors will be chosen based upon a ladder calculation
     * that uses the brightness of a background color.  Instead of using these
     * colors directly as -fx-text-fill values, the sections in this file should
     * use a derived color to match the background in use.  See also:
     *
     * -fx-text-base-color for text on top of -fx-base, -fx-color, and -fx-body-color
     * -fx-text-background-color for text on top of -fx-background
     * -fx-text-inner-color for text on top of -fx-control-inner-color
     */
    -fx-dark-text-color: black;
    -fx-mid-text-color: #333;
    -fx-light-text-color: white;

    /* A bright blue for highlighting/accenting objects.  For example: selected
     * text; selected items in menus, lists, trees, and tables; progress bars */
    -fx-accent: #0096C9;

    /* Default buttons color, this is similar to accent but more subtle */
    -fx-default-button: #ABD8ED;

    /* A bright blue for the focus indicator of objects. Typically used as the
     * first color in -fx-background-color for the "focused" pseudo-class. Also
     * typically used with insets of -1.4 to provide a glowing effect.
     */
    -fx-focus-color: #039ED3;
    -fx-faint-focus-color: #039ED322;

    /* The color that is used in styling controls. The default value is based
     * on -fx-base, but is changed by pseudoclasses to change the base color.
     * For example, the "hover" pseudoclass will typically set -fx-color to
     * -fx-hover-base (see below) and the "armed" pseudoclass will typically
     * set -fx-color to -fx-pressed-base.
     */
    -fx-color: -fx-base;

    /* Chart Color Palette */
    CHART_COLOR_1: #f3622d;
    CHART_COLOR_2: #fba71b;
    CHART_COLOR_3: #57b757;
    CHART_COLOR_4: #41a9c9;
    CHART_COLOR_5: #4258c9;
    CHART_COLOR_6: #9a42c8;
    CHART_COLOR_7: #c84164;
    CHART_COLOR_8: #888888;
    /* Chart Color Palette Semi-Transparent
     * These are used by charts that need semi transparent versions of the above colors, such as BubbleChart. They
     * are exactly the same colors as above just with alpha
     *
     * 20% opacity
     */
    CHART_COLOR_1_TRANS_20: #f3622d33;
    CHART_COLOR_2_TRANS_20: #fba71b33;
    CHART_COLOR_3_TRANS_20: #57b75733;
    CHART_COLOR_4_TRANS_20: #41a9c933;
    CHART_COLOR_5_TRANS_20: #4258c933;
    CHART_COLOR_6_TRANS_20: #9a42c833;
    CHART_COLOR_7_TRANS_20: #c8416433;
    CHART_COLOR_8_TRANS_20: #88888833;
    /* 70% opacity */
    CHART_COLOR_1_TRANS_70: #f3622db3;
    CHART_COLOR_2_TRANS_70: #fba71bb3;
    CHART_COLOR_3_TRANS_70: #57b757b3;
    CHART_COLOR_4_TRANS_70: #41a9c9b3;
    CHART_COLOR_5_TRANS_70: #4258c9b3;
    CHART_COLOR_6_TRANS_70: #9a42c8b3;
    CHART_COLOR_7_TRANS_70: #c84164b3;
    CHART_COLOR_8_TRANS_70: #888888b3;

    /***************************************************************************
     *                                                                         *
     * Colors that are derived from the main color palette.                    *
     *                                                                         *
     **************************************************************************/

    /* A little lighter than -fx-base and used as the -fx-color for the
     * "hovered" pseudoclass state.
     */
    -fx-hover-base: ladder(
        -fx-base,
        derive(-fx-base,20%) 20%,
        derive(-fx-base,30%) 35%,
        derive(-fx-base,40%) 50%
     );

    /* A little darker than -fx-base and used as the -fx-color for the
     * "armed" pseudoclass state.
     *
     * TODO: should this be renamed to -fx-armed-base?
     */
    -fx-pressed-base: derive(-fx-base,-6%);

    /* The color to use for -fx-text-fill when text is to be painted on top of
     * a background filled with the -fx-background color.
     */
    -fx-text-background-color: ladder(
        -fx-background,
        -fx-light-text-color 45%,
        -fx-dark-text-color  46%,
        -fx-dark-text-color  59%,
        -fx-mid-text-color   60%
    );

    /* A little darker than -fx-color and used to draw boxes around objects such
     * as progress bars, scroll bars, scroll panes, trees, tables, and lists.
     */
    -fx-box-border: ladder(
        -fx-color,
        black 20%,
        derive(-fx-color,-15%) 30%
    );

    /* Darker than -fx-background and used to draw boxes around text boxes and
     * password boxes.
     */
    -fx-text-box-border: ladder(
        -fx-background,
        black 10%,
        derive(-fx-background, -15%) 30%
    );

    /* Lighter than -fx-background and used to provide a small highlight when
     * needed on top of -fx-background. This is never a shadow in Modena but
     * keep -fx-shadow-highlight-color name to be compatible with Caspian.
     */
    -fx-shadow-highlight-color: ladder(
        -fx-background,
        rgba(255,255,255,0.07) 0%,
        rgba(255,255,255,0.07) 20%,
        rgba(255,255,255,0.07) 70%,
        rgba(255,255,255,0.7) 90%,
        rgba(255,255,255,0.75) 100%
      );

    /* A gradient that goes from a little darker than -fx-color on the top to
     * even more darker than -fx-color on the bottom.  Typically is the second
     * color in the -fx-background-color list as the small thin border around
     * a control. It is typically the same size as the control (i.e., insets
     * are 0).
     */
    -fx-outer-border: derive(-fx-color,-23%);

    /* A gradient that goes from a bit lighter than -fx-color on the top to
     * a little darker at the bottom.  Typically is the third color in the
     * -fx-background-color list as a thin highlight inside the outer border.
     * Insets are typically 1.
     */
    -fx-inner-border: linear-gradient(to bottom,
                ladder(
                    -fx-color,
                    derive(-fx-color,30%) 0%,
                    derive(-fx-color,20%) 40%,
                    derive(-fx-color,25%) 60%,
                    derive(-fx-color,55%) 80%,
                    derive(-fx-color,55%) 90%,
                    derive(-fx-color,75%) 100%
                ),
                ladder(
                    -fx-color,
                    derive(-fx-color,20%) 0%,
                    derive(-fx-color,10%) 20%,
                    derive(-fx-color,5%) 40%,
                    derive(-fx-color,-2%) 60%,
                    derive(-fx-color,-5%) 100%
                ));
    -fx-inner-border-horizontal: linear-gradient(to right, derive(-fx-color,55%), derive(-fx-color,-5%));
    -fx-inner-border-bottomup: linear-gradient(to top, derive(-fx-color,55%), derive(-fx-color,-5%));

    /* A gradient that goes from a little lighter than -fx-color at the top to
     * a little darker than -fx-color at the bottom and is used to fill the
     * body of many controls such as buttons.
     */
    -fx-body-color: linear-gradient(to bottom,
            ladder(
                -fx-color,
                derive(-fx-color,8%) 75%,
                derive(-fx-color,10%) 80%
            ),
            derive(-fx-color,-8%));
    -fx-body-color-bottomup: linear-gradient(to top, derive(-fx-color,10%) ,derive(-fx-color,-6%));
    -fx-body-color-to-right: linear-gradient(to right, derive(-fx-color,10%) ,derive(-fx-color,-6%));

    /* The color to use as -fx-text-fill when painting text on top of
     * backgrounds filled with -fx-base, -fx-color, and -fx-body-color.
     */
    -fx-text-base-color: ladder(
        -fx-color,
        -fx-light-text-color 45%,
        -fx-dark-text-color  46%,
        -fx-dark-text-color  59%,
        -fx-mid-text-color   60%
    );

    /* The color to use as -fx-text-fill when painting text on top of
     * backgrounds filled with -fx-control-inner-background.
     */
    -fx-text-inner-color: ladder(
        -fx-control-inner-background,
        -fx-light-text-color 45%,
        -fx-dark-text-color  46%,
        -fx-dark-text-color  59%,
        -fx-mid-text-color   60%
    );

    /* The color to use for small mark-like objects such as checks on check
     * boxes, filled in circles in radio buttons, arrows on scroll bars, etc.
     */
    -fx-mark-color: ladder(
        -fx-color,
        white 30%,
        derive(-fx-color,-63%) 31%
    );

    /* The small thin light "shadow" for mark-like objects. Typically used in
     * conjunction with -fx-mark-color with an insets of 1 0 -1 0. */
    -fx-mark-highlight-color: ladder(
        -fx-color,
        derive(-fx-color,80%) 60%,
        white 70%
    );

    /* Background for items in list like things such as menus, lists, trees,
     * and tables. */
    -fx-selection-bar: -fx-accent;

    /* Background color to use for selection of list cells etc. This is when
     * the control doesn't have focus or the row of a previously selected item. */
    -fx-selection-bar-non-focused: lightgrey;

    /* These are needed for Popup */
    -fx-background-color: inherit;
    -fx-background-radius: inherit;
    -fx-background-insets: inherit;
    -fx-padding: inherit;

    /* The color to use in ListView/TreeView/TableView to indicate hover. */
    -fx-cell-hover-color: #cce3f4;

    /** Focus line for keyboard focus traversal on cell based controls */
    -fx-cell-focus-inner-border: derive(-fx-selection-bar,30%);

    /* The colors to use in Pagination */
    -fx-page-bullet-border: #acacac;
    -fx-page-indicator-hover-border: #accee5;    
    

    /***************************************************************************
     *                                                                         *
     * Set the default background color for the scene                          *
     *                                                                         *
     **************************************************************************/

    -fx-background-color: -fx-background;
}

/*******************************************************************************
 *                                                                             *
 * Common Styles                                                               *
 *                                                                             *
 * These are styles that give a standard look to a whole range of controls     *
 *                                                                             *
 ******************************************************************************/

/* ====   TEXT NODES IN CONTROLS   ========================================== */

.text {
    /* This adjusts text alignment within the bounds of text nodes so that
       the text is always vertically centered within the bounds. Based on
       the cap height of the text. */
    -fx-bounds-type: logical_vertical_center;
    /* Enable LCD text rendering */
    -fx-font-smoothing-type: lcd;
}

/* ====   BUTTON LIKE THINGS   ============================================== */

.button,
.toggle-button,
.radio-button > .radio,
.check-box > .box,
/*.menu-button, */ /* enable this if you want menu button to look like normal button*/
.color-picker.split-button > .color-picker-label{
   /* -fx-background-color:
        rgba(255, 255, 255, 0.08),
        rgba(0, 0, 0, 0.8),
        #090a0c,
        linear-gradient(#4a5661 0%, #1f2429 20%, #1f242a 100%),
        linear-gradient(#242a2e, #23282e),
        radial-gradient(center 50% 0%, radius 100%, rgba(135,142,148,0.9),
        rgba(255,255,255,0));
    -fx-background-radius: 4, 3, 3, 3, 2, 3;
    -fx-background-insets: -3 -3 -4 -3, -3, 0, 1, 2, 0;
    -fx-text-fill: -fx-def-font-color;
    -fx-padding: 0;
    -fx-alignment: CENTER;
    -fx-content-display: LEFT;*/

    -fx-background-color: rgba(0,0,0,0.2);
    -fx-border-color: 
        transparent transparent rgba(255, 255, 255, 0.08) transparent,
        rgba(255, 255, 255, 0.15) rgba(0, 0, 0, 0.2) rgba(0, 0, 0, 0.5) rgba(255, 255, 255, 0.1);
    -fx-border-width: 1, 1.5;
    -fx-border-insets: -2, -0.5;
    -fx-text-fill: -fx-def-font-color;
    -fx-padding: 0;
    -fx-alignment: CENTER;
    -fx-content-display: LEFT;
}
.menu-button > .label {
    -fx-alignment: CENTER_LEFT;
}
.button:hover,
.toggle-button:hover,
.radio-button:hover > .radio,
.check-box:hover > .box,
.menu-button:hover,
.split-menu-button > .label:hover,
.split-menu-button > .arrow-button:hover,
/*.slider .thumb:hover,*/
.color-picker.split-button > .arrow-button:hover,
.color-picker.split-button > .color-picker-label:hover,
.tab-pane > .tab-header-area > .control-buttons-tab > .container > .tab-down-button:hover {
    -fx-background-color:
        rgba(255, 255, 255, 0.08),
        rgba(0, 0, 0, 0.8),
        #090a0c,
        linear-gradient(#4f6070 0%, #1f2630 30%, #1f2430 100%),
        linear-gradient(#242a30, #232830),
        radial-gradient(center 60% 0%, radius 100%, rgba(135,142,160,0.9),
        rgba(255,255,255,0));
}
.button:armed,
.toggle-button:armed,
.radio-button:armed > .radio,
.check-box:armed .box,
.menu-button:armed,
.split-menu-button:armed > .label,
.split-menu-button > .arrow-button:pressed,
.split-menu-button:showing > .arrow-button,
/*.slider .thumb:pressed,*/
/*.choice-box:showing,*/
.tab-pane > .tab-header-area > .control-buttons-tab > .container > .tab-down-button:pressed {
    -fx-background-color:
        rgba(255, 255, 255, 0.08),
        rgba(0, 0, 0, 0.8),
        #090a0c,
        linear-gradient(#4f6070 0%, #1f2630 30%, #1f2430 100%),
        linear-gradient(#242a30, #232830),
        radial-gradient(center 60% 0%, radius 100%, rgba(145,150,160,0.9),
        rgba(255,255,255,0));
}
.button:focused,
.toggle-button:focused,
.radio-button:focused > .radio,
.menu-button:focused,
/*.choice-box:focused,*/
.color-picker.split-button:focused > .color-picker-label{
    -fx-background-color:
        rgba(255, 255, 255, 0.08),
        rgba(0, 0, 0, 0.8),
        #090a0c,
        linear-gradient(#4f6070 0%, #1f2630 30%, #1f2430 100%),
        linear-gradient(#242a30, #232830),
        radial-gradient(center 60% 0%, radius 100%, rgba(135,142,160,0.9),
        rgba(255,255,255,0));
}

/* ====   DISABLED THINGS   ================================================= */

.label:disabled,
.button:disabled,
.toggle-button:disabled,
.radio-button:disabled,
.check-box:disabled,
.hyperlink:disabled,
.menu-button:disabled,
.split-menu-button:disabled,
.slider:disabled,
.scroll-bar:disabled,
.scroll-pane:disabled,
.progress-bar:disabled,
.progress-indicator:disabled,
.text-input:disabled,
.choice-box:disabled,
.combo-box-base:disabled,
.date-cell:disabled > *, /* This is set on children so border is not affected. */
.list-view:disabled,
.tree-view:disabled,
.table-view:disabled,
.tree-table-view:disabled,
.tab-pane:disabled,
.titled-pane:disabled > .title,
.accordion:disabled > .titled-pane > .title,
.tab-pane > .tab-header-area > .headers-region > .tab:disabled,
.menu:disabled,
.menu-item:disabled > .label,
.menu-item:disabled,
.list-cell:filled:selected:focused:disabled,
.list-cell:filled:selected:disabled,
.tree-cell:filled:selected:focused:disabled,
.tree-cell:filled:selected:disabled,
.tree-cell > .tree-disclosure-node:disabled,
.tree-table-row-cell > .tree-disclosure-node:disabled,
.table-row-cell:selected:disabled,
.tree-table-row-cell:selected:disabled,
.table-cell:selected:disabled,
.tree-table-cell:selected:disabled {
    -fx-opacity: 0.4;
}
/* ====   MNEMONIC THINGS   ================================================= */

.mnemonic-underline {
    /*-fx-stroke: transparent;*/
}

.titled-pane:show-mnemonics > .mnemonic-underline,
.label:show-mnemonics > .mnemonic-underline,
.context-menu:show-mnemonics > .mnemonic-underline,
.menu:show-mnemonics > .mnemonic-underline,
.menu-bar:show-mnemonics > .mnemonic-underline,
.menu-item:show-mnemonics > .mnemonic-underline,
.button:show-mnemonics > .mnemonic-underline,
.toggle-button:show-mnemonics > .mnemonic-underline,
.radio-button:show-mnemonics > .mnemonic-underline,
.check-box:show-mnemonics > .mnemonic-underline,
.hyperlink:show-mnemonics > .mnemonic-underline,
.split-menu-button:show-mnemonics > .mnemonic-underline,
.menu-button:show-mnemonics > .mnemonic-underline {
    /*-fx-stroke: -fx-text-base-color;*/
} 

/* ====   MARKS   =========================================================== */

.radio-button:selected > .radio > .dot,
.check-box:selected > .box > .mark,
.check-box:indeterminate  > .box > .mark {
    -fx-background-color: -fx-mark-highlight-color, -fx-mark-color;
    -fx-background-insets: 1 0 -1 0, 0;
}

/* ====   ARROWS   ========================================================== */

.menu-button > .arrow-button > .arrow,
.split-menu-button > .arrow-button > .arrow,
.choice-box > .open-button > .arrow,
.menu-button:openvertically > .arrow-button > .arrow,
.split-menu-button:openvertically > .arrow-button > .arrow,
.combo-box-base > .arrow-button > .arrow,
.web-view .form-select-button .arrow,
.tab-pane > .tab-header-area > .control-buttons-tab > .container > .tab-down-button > .arrow  {
    -fx-background-color: -fx-def-font-color;
    /* use this to get nice not filled arrow */
    /*-fx-background-color: -fx-mark-highlight-color, -fx-mark-color;*/
    -fx-background-insets: 1 0 -1 0, 0;
    -fx-padding: 0.25em 0.3125em 0.25em 0.3125em; /* 3 3.75 3 3.75 */
    -fx-shape: "M 0 0 h 7 l -3.5 4 z";
}

/* ====   CHOICE BOX LIKE THINGS   ========================================== */

.menu-button {
    -fx-text-fill: -fx-def-font-color;
    -fx-background-color:
        rgba(255, 255, 255, 0.3),
        linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.8) 50%),
        rgb(218, 226, 224);
    -fx-background-insets: 0 0 -1 0, 0, 1.5;
    -fx-background-radius: 3, 2, 2;
    -fx-border: null;
    -fx-padding: 3 10 2 10;
    /*this creates inner shadow 'gradient effect' for menu item label text*/
    /*-fx-effect: innershadow( gaussian, rgba(0, 0, 0, 0.7), 4, 0, 0, 2 );*/
}

.choice-box > .label,
.menu-button > .label,
.color-picker > .label {
    /*-fx-padding: 0.333333em 0.666667em 0.333333em 0.666667em;*/ /* 4 8 4 8 */
    -fx-text-fill: -fx-def-font-color;
}
.choice-box > .open-button,
.menu-button > .arrow-button {
    /*-fx-padding: 0.5em 0.667em 0.5em 0.0em;  6 8 6 0 */
}

/* ====   BOX LIKE THINGS   ================================================= */

.scroll-pane,
.split-pane,
.list-view,
.tree-view,
.table-view, 
.tree-table-view,
.html-editor {
    -fx-background-color: transparent;
    -fx-background-insets: 0;
    -fx-padding: 0;
    -fx-border: none;
}

.scroll-pane:focused,
.split-pane:focused,
.list-view:focused,
.tree-view:focused,
.table-view:focused,
.tree-table-view:focused,
.html-editor:focused {
    -fx-background-color: transparent;
    -fx-background-insets: 0;
    -fx-background-radius: 0;
}

/********************************** Slider *************************************
 * 
 * pseudoclasses: vertical
 */

.slider {
    -fx-skin: "sp.it.pl.gui.objects.ImprovedSliderSkin";
}
.slider .thumb {
    -fx-background-color: -fx-def-font-color;
    -fx-padding: 2;
    -fx-background-radius:1;
}
.slider .thumb:hover,
.slider .thumb:pressed {
    /*-fx-background-color: white;*/
    -fx-padding: 2;
    /*-fx-background-radius:0;*/
}
.slider:focused .thumb {
     /*-fx-background-radius: 1.0em;  *//* makes sure this remains circular*/
}
.slider .track {
    -fx-background-color: rgba(255,255,255,0.3);
    -fx-background-insets: 0;
    -fx-background-radius: 1;
    -fx-padding: 1;      /*basically track width*/
}
.slider:vertical .track {}
.slider .axis {
    -fx-tick-mark-stroke: ladder(-fx-background, derive(-fx-background,30%) 40%, derive(-fx-background,-30%) 41%);
    -fx-tick-label-fill: -fx-def-font-color;
    -fx-background-insets: -6,5,4,3;
    /*-fx-translate-y: -0; // THIS NEEDS TO BE SOLVED - it leaves space in the bottom so the control is not aligned properly*/
    -fx-opacity:0.9;
}

/*******************************************************************************
 *                                                                             *
 * ScrollBar                                                                   *
 *                                                                             *
 ******************************************************************************/

.scroll-bar {
    -fx-skin: "sp.it.pl.gui.objects.ImprovedScrollBarSkin";
    -fx-background-color: null;
    -fx-background-insets: 0;
}
.scroll-bar:horizontal {
    -fx-background-color: null;
    -fx-background-insets: 0;
}
.scroll-bar:vertical {
    -fx-background-color: null;
    -fx-background-insets: 0;
}
.scroll-bar:focused {
    -fx-background-color: null;
    -fx-background-insets: 0;
}
.scroll-bar:vertical:focused {
    -fx-background-color: null;
}
.scroll-bar > .thumb {
/*    default
    -fx-background-color: rgb(211,211,211);
    -fx-background-insets: 2, 3, 4;
    -fx-background-radius: 3, 2, 1;*/
    -fx-background-color: -fx-def-font-color;
    -fx-background-insets: 0.525em;
    -fx-background-radius: 0.25em; /* 3px */
}
.scroll-bar:vertical > .thumb {
    -fx-background-color: -fx-def-font-color;
}
.scroll-bar > .increment-button,
.scroll-bar > .decrement-button {
    -fx-background-color: null;
    -fx-color: -fx-def-font-color;
    -fx-padding: 0.25em; /* 3px */
}
.scroll-bar:horizontal > .increment-button,
.scroll-bar:horizontal > .decrement-button {
    -fx-background-insets: 2 1 2 1, 3 2 3 2, 4 3 4 3;
}
.scroll-bar:vertical > .increment-button,
.scroll-bar:vertical > .decrement-button {
    -fx-background-insets: 1 2 1 2, 2 3 2 3, 3 4 3 4;
}
.scroll-bar > .increment-button > .increment-arrow,
.scroll-bar > .decrement-button > .decrement-arrow {
    -fx-background-color: -fx-def-font-color;
}
.scroll-bar > .increment-button:hover > .increment-arrow,
.scroll-bar > .decrement-button:hover > .decrement-arrow {
    -fx-background-color: -fx-def-font-color;
}
.scroll-bar > .increment-button:pressed > .increment-arrow,
.scroll-bar > .decrement-button:pressed > .decrement-arrow {
    -fx-background-color: -fx-def-font-color;
}
.scroll-bar:horizontal > .decrement-button > .decrement-arrow {
    -fx-padding: 0.333em 0.167em 0.333em 0.167em; /* 4 2 4 2 */
    -fx-shape: "M5.997,5.072L5.995,6.501l-2.998-4l2.998-4l0.002,1.43l-1.976,2.57L5.997,5.072z";
    -fx-effect: dropshadow(two-pass-box , -fx-shadow-highlight-color, 1, 0.0 , 0, 1.4);
    /*-fx-background-insets: 2 0 -2 0, 0;*/
}
.scroll-bar:horizontal > .increment-button > .increment-arrow {
    -fx-padding: 0.333em 0.167em 0.333em 0.167em; /* 4 2 4 2 */
    -fx-shape: "M2.998-0.07L3-1.499l2.998,4L3,6.501l-0.002-1.43l1.976-2.57L2.998-0.07z";
    -fx-effect: dropshadow(two-pass-box , -fx-shadow-highlight-color, 1, 0.0 , 0, 1.4);
    /*-fx-background-insets: 2 0 -2 0, 0;*/
}
.scroll-bar:vertical > .decrement-button > .decrement-arrow {
    -fx-padding: 0.167em 0.333em 0.167em 0.333em; /* 2 4 2 4 */
    -fx-shape: "M1.929,4L0.5,3.998L4.5,1l4,2.998L7.07,4L4.5,2.024L1.929,4z";
    -fx-effect: dropshadow(two-pass-box , -fx-shadow-highlight-color, 1, 0.0 , 0, 1.4);
    /*-fx-background-insets: 2 0 -2 0, 0;*/
}
.scroll-bar:vertical > .increment-button > .increment-arrow {
    -fx-padding: 0.167em 0.333em 0.167em 0.333em; /* 2 4 2 4 */
    -fx-shape: "M7.071,1L8.5,1.002L4.5,4l-4-2.998L1.93,1L4.5,2.976L7.071,1z";
    -fx-effect: dropshadow(two-pass-box , -fx-shadow-highlight-color, 1, 0.0 , 0, 1.4);
    /*-fx-background-insets: 2 0 -2 0, 0;*/
}

/* Force all scrollbar to be of equal size */
.scroll-bar:vertical {
    -fx-pref-width: 1.66666666667em; /* 20 */ /* adjusting this affects .scroll-bar > .thumb */
}
.scroll-bar:horizontal {
    -fx-pref-height: 1.66666666667em; /* 20 */ /* adjusting this affects .scroll-bar > .thumb */
}

.scroll-bar,
.scroll-bar:vertical,
.scroll-bar:horizontal,
.virtual-flow > .scroll-bar,
.virtual-flow > .scroll-bar:vertical,
.virtual-flow > .scroll-bar:horizontal,
.text-area > .scroll-pane > .scroll-bar,
.text-area > .scroll-pane > .scroll-bar:vertical,
.text-area > .scroll-pane > .scroll-bar:horizontal,
.list-view > .virtual-flow > .scroll-bar,
.list-view > .virtual-flow > .scroll-bar:vertical,
.list-view > .virtual-flow > .scroll-bar:horizontal,
.tree-view > .virtual-flow > .scroll-bar,
.tree-view > .virtual-flow > .scroll-bar:vertical,
.tree-view > .virtual-flow > .scroll-bar:horizontal,
.table-view > .virtual-flow > .scroll-bar,
.table-view > .virtual-flow > .scroll-bar:vertical,
.table-view > .virtual-flow > .scroll-bar:horizontal,
.tree-table-view > .virtual-flow > .scroll-bar,
.tree-table-view > .virtual-flow > .scroll-bar:vertical,
.tree-table-view > .virtual-flow > .scroll-bar:horizontal {
    -fx-padding: 0;
    -fx-background-insets: 0;
    -fx-background-radius: 0;
}

.scroll-bar > .thumb,
.scroll-bar:vertical > .thumb,
.scroll-bar:horizontal > .thumb,
.virtual-flow > .scroll-bar > .thumb,
.virtual-flow > .scroll-bar:vertical > .thumb,
.virtual-flow > .scroll-bar:horizontal > .thumb,
.text-area > .scroll-pane > .scroll-bar > .thumb,
.text-area > .scroll-pane > .scroll-bar:vertical > .thumb,
.text-area > .scroll-pane > .scroll-bar:horizontal > .thumb,
.list-view > .virtual-flow > .scroll-bar > .thumb,
.list-view > .virtual-flow > .scroll-bar:vertical > .thumb,
.list-view > .virtual-flow > .scroll-bar:horizontal > .thumb,
.tree-view > .virtual-flow > .scroll-bar > .thumb,
.tree-view > .virtual-flow > .scroll-bar:vertical > .thumb,
.tree-view > .virtual-flow > .scroll-bar:horizontal > .thumb,
.table-view > .virtual-flow > .scroll-bar > .thumb,
.table-view > .virtual-flow > .scroll-bar:vertical > .thumb,
.table-view > .virtual-flow > .scroll-bar:horizontal > .thumb,
.tree-table-view > .virtual-flow > .scroll-bar > .thumb,
.tree-table-view > .virtual-flow > .scroll-bar:vertical > .thumb,
.tree-table-view > .virtual-flow > .scroll-bar:horizontal > .thumb {
    -fx-padding: 0;
    -fx-background-color: -fx-def-font-color;
    -fx-background-insets: 0.75em;
    -fx-background-radius: 1em; /* 3px */
}

/*******************************************************************************
 *                                                                             *
 * ScrollPane                                                                  *
 *                                                                             *
 ******************************************************************************/
.scroll-pane > .viewport {
    -fx-background-color: null;
}
.scroll-pane > .scroll-bar:horizontal {
    -fx-background-insets: 0;
    -fx-padding: 0;
}
.scroll-pane > .scroll-bar:horizontal > .increment-button,
.scroll-pane > .scroll-bar:horizontal > .decrement-button {
    -fx-padding: 0.166667em 0.25em 0.25em  0.25em; /*2 3 3 3*/ 
}
.scroll-pane > .scroll-bar:vertical > .increment-button,
.scroll-pane > .scroll-bar:vertical > .decrement-button {
    -fx-padding: 0.25em 0.25em 0.25em 0.166667em;  /*3 3 3 2*/ 
}
.scroll-pane > .scroll-bar:vertical {
    -fx-background-insets: 0;
    -fx-padding: 0;
}
.scroll-pane > .corner {
    -fx-opacity: 0;
    -fx-background-color: rgb(76,81,86), rgb(195,199,203);
    -fx-background-insets: 0, 1 1 1 1;
}
/* new styleclass for edge to edge scroll-panes that don't want to draw a border */
.scroll-pane.edge-to-edge,
.tab-pane > * > .scroll-pane {
    -fx-background-color: -fx-background;
    -fx-background-insets: 0;
    -fx-padding: 0;
}
.scroll-pane.edge-to-edge > .scroll-bar,
.tab-pane > * > .scroll-pane > .scroll-bar,
.titled-pane > * > * > .scroll-pane > .scroll-bar {
    -fx-background-insets: 0;
    -fx-padding: 0;
}
.scroll-pane.edge-to-edge > .scroll-bar > .increment-button, 
.scroll-pane.edge-to-edge > .scroll-bar > .decrement-button,
.tab-pane > * > .scroll-pane > .scroll-bar > .increment-button, 
.tab-pane > * > .scroll-pane > .scroll-bar > .decrement-button,
.titled-pane > * > * > .scroll-pane > .scroll-bar > .increment-button,
.titled-pane > * > * > .scroll-pane > .scroll-bar > .decrement-button {
    -fx-padding: 0.25em; /*3px*/ 
}

/*******************************************************************************
 *                                                                             *
 * Separator                                                                   *
 *                                                                             *
 ******************************************************************************/

.separator:horizontal .line {
    -fx-border-color: -fx-text-box-border transparent transparent transparent,
        -fx-shadow-highlight-color transparent transparent transparent;
    -fx-border-insets: 0, 1 0 0 0;
}
.separator:vertical .line {
    -fx-border-color: transparent transparent transparent -fx-shadow-highlight-color,
        transparent transparent transparent -fx-text-box-border;
    -fx-border-width: 3, 1;
    -fx-border-insets: 0, 0 0 0 1;
}

/*******************************************************************************
 *                                                                             *
 * Text BOXES                                                                  *
 *                                                                             *
 ******************************************************************************/

.choice-box,
.choice-box:hover,
.choice-box:showing,
.text-input {
    -fx-background-color:
        rgba(255, 255, 255, 0.3),
        linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.8) 50%),
        rgb(218, 226, 224);
    -fx-background-insets: 0 0 -1 0, 0, 1.5;
    -fx-background-radius: 3, 2, 2;
    -fx-padding: 3 5 2 5;
    -fx-effect: innershadow( gaussian, rgba(0, 0, 0, 0.7), 4, 0, 0, 2 );
    
    -fx-prompt-text-fill: -fx-prompt-font-color;
}
.choice-box:focused,
.text-input:focused,
.custom-text-field,
.custom-text-field:focused {
    -fx-background-color: rgba(235, 235, 235, 0.7),
                          rgba(0, 0, 0, 0.6),
                          rgba(255, 255, 255, 0.92);
    
    -fx-prompt-text-fill: -fx-prompt-font-color;
}
.text-input:hover:readonly,
.text-input:focused:readonly {
    -fx-background-color: null;
}

/********************************* TextArea ***********************************/

.text-area {

}
.text-area:focused {

}
.text-area > .scroll-pane {
    -fx-background-color: null;
}
.text-area > .scroll-pane > .scroll-bar:horizontal {
    -fx-background-radius: 0;
}
.text-area > .scroll-pane > .scroll-bar:vertical {
    -fx-background-radius: 0;
}
.text-area > .scroll-pane > .corner {
    -fx-background-radius: 0 0 2 0;
}
.text-area .content,
.text-area:focused .content {
    -fx-background-color:  transparent;
    -fx-background-insets: 0;
    -fx-padding: 3 6 2 6;
}


/********************************* ComboBox ***********************************/

/* Customise the ListCell that appears in the ComboBox button itself */
.combo-box > .list-cell {
    -fx-background: null;
    -fx-background-color: null;
    -fx-text-fill: -fx-text-base-color;
    /*-fx-padding: 0.333333em 0.666667em 0.333333em 0.666667em;*/ /* 4 8 4 8 */
}
.combo-box-base:editable > .arrow-button,
.combo-box-base > .arrow-button {
    -fx-background-radius: 0 3 3 0, 0 2 2 0, 0 1 1 0;
    /*-fx-padding: 0.5em 0.667em 0.5em 0.833333em;*/ /* 6 8 6 10 */
    -fx-background-color: null;
}
.combo-box-base,
.combo-box-base:editable {
    -fx-background-color:
        rgba(255, 255, 255, 0.3),
        linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.8) 50%),
        rgb(218, 226, 224);
    -fx-background-insets: 0 0 -1 0, 0, 1.5;
    -fx-background-radius: 3, 2, 2;
    -fx-padding: 3 10 2 10;
    -fx-effect: innershadow( gaussian, rgba(0, 0, 0, 0.7), 4, 0, 0, 2 );
    -fx-text-fill: -fx-def-font-color;
    -fx-alignment: CENTER;
    -fx-content-display: LEFT;
}
.menu-button > .label {
    -fx-alignment: CENTER_LEFT;
}
.combo-box-base:hover,
.combo-box-base:editable:hover{
    -fx-background-color:
        rgba(255, 255, 255, 0.3),
        linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.8) 50%),
        rgb(218, 226, 224);
    -fx-background-insets: 0 0 -1 0, 0, 1.5;
    -fx-background-radius: 3, 2, 2;
    -fx-padding: 3 10 2 10;
    -fx-effect: innershadow( gaussian, rgba(0, 0, 0, 0.7), 4, 0, 0, 2 );
}
.combo-box-base:showing,
.combo-box-base:editable:showing > .arrow-button {
    -fx-background-color:
        rgba(255, 255, 255, 0.3),
        linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.8) 50%),
        rgb(218, 226, 224);
    -fx-background-insets: 0 0 -1 0, 0, 1.5;
    -fx-background-radius: 3, 2, 2;
    -fx-padding: 3 10 2 10;
    -fx-effect: innershadow( gaussian, rgba(0, 0, 0, 0.7), 4, 0, 0, 2 );
}
.combo-box-base:focused {
    -fx-background-color: rgba(235, 235, 235, 0.7),
                          rgba(0, 0, 0, 0.6),
                          rgba(255, 255, 255, 0.92);
}

/* editable combobox */
.combo-box-base:editable > .arrow-button,
.combo-box-base:editable > .text-field,
.combo-box-base:editable:contains-focus,
.combo-box-base:editable:focused > .text-field,
.combo-box-base:editable > .text-field:focused,
.combo-box-base:editable:contains-focus > .arrow-button {}


.date-picker > .arrow-button {
    -fx-background-color: -fx-outer-border, -fx-inner-border, -fx-body-color;
    -fx-background-insets: 1 1 1 0, 1, 2;
    -fx-background-radius: 0 3 3 0, 0 2 2 0, 0 1 1 0;
}
.date-picker > .text-field {
    -fx-background-color: -fx-control-inner-background;
    -fx-background-insets: 1 0 1 1;
    -fx-background-radius: 2 0 0 2;
}
.date-picker:contains-focus {
    -fx-background-color: -fx-focus-color;
    -fx-background-insets: -0.2;
    -fx-background-radius: 3;
}
.date-picker:focused > .text-field,
.date-picker > .text-field:focused {
    -fx-background-color: 
        -fx-control-inner-background,
        -fx-faint-focus-color,
        linear-gradient(from 0px 0px to 0px 5px, derive(-fx-control-inner-background, -9%), -fx-control-inner-background);
    -fx-background-insets: 1 0 1 1, 1 0 1 1, 3 2 3 3;
    -fx-background-radius: 2 0 0 2, 1 0 0 1, 0;
}
.date-picker:contains-focus > .arrow-button {
    -fx-background-color: -fx-inner-border, -fx-body-color, -fx-faint-focus-color, -fx-body-color;
    -fx-background-insets: 1, 2, 1, 2.6;
    -fx-background-radius: 0 2 2 0, 0 1 1 0, 0 1 1 0, 0 1 1 0;
}

/********* PopupControl that is displayed when the button is pressed **********/

.combo-box-popup > .list-view {
    -fx-background-color: -fx-popup-def-bgr-color;
    -fx-background-insets: 0, 1;
    -fx-effect: null;
    /*gets in the way of transparent bgr*/
    /*-fx-effect: dropshadow( gaussian , rgba(0,0,0,0.2) , 12, 0.0 , 0 , 8 );*/
}
.combo-box-popup > .list-view > .virtual-flow > .clipped-container > .sheet > .list-cell {
    -fx-padding: 0;
    -fx-background-color: null;
    -fx-text-fill:-fx-def-font-color;
}
.combo-box-popup > .list-view > .virtual-flow > .clipped-container > .sheet > .list-cell:filled:hover,
.combo-box-popup > .list-view > .virtual-flow > .clipped-container > .sheet > .list-cell:filled:selected,
.combo-box-popup > .list-view > .virtual-flow > .clipped-container > .sheet > .list-cell:filled:selected:hover {
    -fx-background: null;
    -fx-background-color: -fx-color-darker;
    -fx-text-fill:-fx-def-font-color;
}
.combo-box-popup > .list-view > .placeholder > .label {
    -fx-text-fill: derive(-fx-control-inner-background,-30%);
}

/*********************************** LABEL ************************************/

.label {
    -fx-text-fill: -fx-def-font-color;
    /* decreases performance for little eye candy */
    /*-fx-effect: dropshadow( one-pass-box , rgba(0, 0, 0, 0.7), 0,0 , 0,1 );*/
}

/******************************************************************************** 
 * PopupMenu
 */
.context-menu {
    -fx-background-color: -fx-popup-def-bgr-color;
    -fx-background-radius: 0;
    -fx-background-insets: 0;
    -fx-border-width: 0;
    -fx-padding: 0.5em;
}

.context-menu .separator:horizontal {
    -fx-padding: 0.5em;
}

.context-menu .separator:horizontal .line {
    -fx-border-width: 1;
    -fx-border-color: -fx-def-font-color transparent transparent transparent;
    -fx-border-insets: 1 0 0 0;
}

/*******************************************************************************
 * MenuBar
 */
.menu-bar {
    -fx-background-color: null;
    -fx-background-radius: 0;
    -fx-background-insets: 0;
    -fx-border-width: 0;
    -fx-padding: 0.5em;
    -fx-spacing: 0.166667em; /* 2 */
}

/******************************************************************************** 
 * Menu
 */
.menu {
    -fx-background-color: null;
    -fx-background-radius: 0;
    -fx-background-insets: 0;
    -fx-border-width: 0;
    -fx-padding: 0.5em;
}

/*******************************************************************************
 * MenuItem
 */
.menu-item {
    -fx-background-color: null;
    -fx-background-radius: 0;
    -fx-background-insets: 0;
    -fx-background-radius: 2;
    -fx-border-width: 0;
    -fx-padding: 0.5em;
}

/*******************************************************************************
 * ChoiceBox
 */
.choice-box > .context-menu {
    -fx-background-color: null;
    -fx-background-radius: 0;
    -fx-background-insets: 0;
    -fx-background-radius: 2;
    -fx-border-width: 0;
    -fx-padding: 0.5em;
}

/*******************************************************************************
 *                                                                             *
 * TabPane                                                                     *
 *                                                                             *
 ******************************************************************************/

.tab-pane {
    -fx-tab-min-height: 1.8333em; /* 22 */
    -fx-tab-max-height: 1.8333em; /* 22 */
}
.tab-pane > .tab-header-area > .headers-region > .tab > .tab-container > .tab-label {
    -fx-alignment: CENTER;
    -fx-text-fill: -fx-def-font-color;
}
.tab-pane > .tab-header-area > .headers-region > .tab {
    -fx-background-insets: 0 1 1 0, 1 2 1 1, 2 3 1 2;
    -fx-background-radius: 3 3 0 0, 2 2 0 0, 1 1 0 0;
    -fx-padding: 0.083333em 0.5em 0.0769em 0.5em; /* 1 6 0.99 6 */
}
.tab-pane > .tab-header-area > .headers-region > .tab:top {
    -fx-background-color: null;
}
.tab-pane > .tab-header-area > .headers-region > .tab:right {
    -fx-background-color: null;
}
.tab-pane > .tab-header-area > .headers-region > .tab:bottom {
    -fx-background-color: null;
}
.tab-pane > .tab-header-area > .headers-region > .tab:left {
    -fx-background-color: null;
}
.tab-pane > .tab-header-area > .headers-region > .tab:hover {
    -fx-color: null;
}
.tab-pane > .tab-header-area > .headers-region > .tab:selected {
    -fx-background-color:-fx-color-lighter;
    -fx-background-insets: 0 1 1 0, 1 2 0 1, 2 3 0 2;
}
.tab-pane:focused > .tab-header-area > .headers-region > .tab:selected .focus-indicator {
    -fx-border-width: 1, 1;
    /*-fx-border-color: -fx-focus-color, -fx-faint-focus-color;*/
    -fx-border-insets: -4 -4 -6 -5, -2 -2 -5 -3;
    -fx-border-radius: 2, 1; /* looks sharper if outer border has a tighter radius (2 instead of 3) */
}
.tab-pane:focused > .tab-header-area > .headers-region > .tab:bottom:selected .focus-indicator {
    -fx-border-insets: -6 -5 -4 -4, -5 -3 -2 -2;
}
.tab-pane > .tab-header-area > .headers-region > .tab:disabled:hover {
    -fx-color: -fx-base;
}
.tab-pane > .tab-header-area > .tab-header-background {
    -fx-background-color: transparent;
}
.tab-pane:top > .tab-header-area > .tab-header-background {
    -fx-background-insets: 0, 0 0 1 0, 1;
}
.tab-pane:bottom > .tab-header-area > .tab-header-background {
    -fx-background-insets: 0, 1 0 0 0, 1;
}
.tab-pane:left > .tab-header-area > .tab-header-background {
    -fx-background-insets: 0, 0 1 0 0, 1;
}
.tab-pane:right > .tab-header-area > .tab-header-background {
    -fx-background-insets: 0, 0 0 0 1, 1;
}
.tab-pane:top > .tab-header-area {
    /*-fx-padding: 0.416667em 0.166667em 0.0em 0.416667em; *//* 5 2 0 5 */
    -fx-padding: 0.416667em 5 0.0em 0.416667em; /* 5 2 0 5 */
}
.tab-pane:bottom > .tab-header-area {
    -fx-padding: 0 0.166667em 0.416667em 0.416667em; /* 0 2 5 5 */
}
.tab-pane:left > .tab-header-area {
    -fx-padding: 0.416667em 0.0em 0.166667em 0.416667em; /* 5 0 2 5 */
}
.tab-pane:right > .tab-header-area {
    -fx-padding: 0.416667em 0.416667em 0.166667em 0.0em; /* 5 5 2 0 */
}
.tab-pane > .tab-header-area > .headers-region > .tab > .tab-container > .tab-close-button {
    /*   
    -fx-mark-color; << this color (original Modena)
     produces runtime parsing errors (string cant be parsed into color)
     grey is good enough
    */
    -fx-background-color: grey;
    -fx-shape: "M 0,0 H1 L 4,3 7,0 H8 V1 L 5,4 8,7 V8 H7 L 4,5 1,8 H0 V7 L 3,4 0,1 Z";
    -fx-scale-shape: false;
    -fx-effect: dropshadow(two-pass-box , rgba(255, 255, 255, 0.4), 1, 0 , 0, 1);
    -fx-opacity: 0.0;
    -fx-padding: 0 2 0 0;
}
.tab-pane > .tab-header-area > .headers-region > .tab > .tab-container:hover > .tab-close-button,
.tab-pane > .tab-header-area > .headers-region > .tab:selected > .tab-container > .tab-close-button,
.tab-pane > .tab-header-area > .headers-region > .tab:selected > .tab-container:hover > .tab-close-button {
    -fx-opacity: 1;
}
.tab-pane > .tab-header-area > .headers-region > .tab > .tab-container > .tab-close-button:hover {
    -fx-background-color: derive(grey, -30%); /*same story as above*/
}
/* CONTROL BUTTONS */
.tab-pane > .tab-header-area > .control-buttons-tab > .container {
    -fx-padding: 3 0 0 0; 
}
.tab-pane > .tab-header-area > .control-buttons-tab > .container > .tab-down-button {
    -fx-background-color: -fx-outer-border, -fx-inner-border, -fx-body-color;
    -fx-background-insets: -1 0 5 0, 0 1 6 1, 1 2 7 2;
    -fx-padding: 4 4 9 4;
    -fx-background-radius: 10;
}
.tab-pane:bottom > .tab-header-area > .control-buttons-tab > .container > .tab-down-button {
    -fx-padding: -0.5em 0.25em 0.25em 0.25em;
}
/* FLOATING TABS CUSTOMISATION */
.tab-pane.floating > .tab-header-area > .tab-header-background {
    -fx-background-color: null;
}
.tab-pane.floating > .tab-header-area {
    -fx-background-color: null;
}
.tab-pane.floating > .tab-content-area {
    -fx-background-color: null;
    -fx-background-insets: 0, 1;
    -fx-background-radius: 2, 0;
    -fx-padding: 2;
}

/********************************* TitledPane *********************************/

.titled-pane {
    -fx-text-fill: -fx-def-font-color;
    -fx-border-width: 0;
}
.titled-pane > .title {
    -fx-text-fill: rgba(255,255,255,0.8);
    -fx-background-insets: 0, 1, 2;
    -fx-background-radius: 5 5 0 0, 4 4 0 0, 3 3 0 0;
    -fx-padding: 0.166667em 0.833333em 0.25em 0.833333em; /* 2 10 3 10 */
}
/* alternative focus using the ring around the entire title area */
/*.titled-pane:focused > .title {
    -fx-background-color: -fx-faint-focus-color, -fx-focus-color, -fx-inner-border, -fx-body-color; 
    -fx-background-insets: 0, 0.7, 2, 3;    
}*/

.titled-pane > .title > .arrow-button {
    -fx-background-color: transparent;
    -fx-background-insets: 0;
    -fx-background-radius: 0;
    -fx-padding: 0.0em 0.25em 0.0em 0.0em; /* 0 3 0 0 */
}
.titled-pane > .title > .arrow-button > .arrow {
    -fx-background-color: -fx-def-font-color;
    /* use to get nice not filled arrow */
    /*-fx-background-color: -fx-mark-highlight-color, -fx-mark-color;*/
    -fx-background-insets: 1 0 -1 0, 0;
    -fx-padding: 0.25em 0.3125em 0.25em 0.3125em; /* 3 3.75 3 3.75 */
    -fx-shape: "M 0 0 h 7 l -3.5 4 z";
}
/* focus purely on the arrow */
.titled-pane:focused > .title > .arrow-button > .arrow {
    /*   
    -fx-background-color: -fx-focus-color, -fx-mark-color;
    -fx-background-insets: -1, 0;
    -fx-effect: dropshadow(two-pass-box , -fx-focus-color, 5, 0.2 , 0, 0);
    */
}

.titled-pane > .title:hover {}

/* alternative content using a border and a grad to transparent background - why should TitledPane content have a colour? */
.titled-pane > *.content {
    -fx-background: transparent;
    -fx-border-width: 0;
    -fx-padding: 0.167em;
}

/********************************* Accordion **********************************/

.accordion > .titled-pane > .title {
    -fx-background-color: null;
    -fx-background-insets: -1 0 0 0, 0 1 1 1, 1 2 2 2;
    -fx-background-radius: 0, 0, 0;
}
.accordion > .first-titled-pane > .title {
    -fx-background-insets: 0, 1, 2;
}
.accordion .first-titled-pane .title {
    -fx-background-insets: 0, 1, 2;
}
.accordion .titled-pane:focused,
.accordion .titled-pane:expanded {
    -fx-text-fill: -fx-focus-color;
}
.accordion .titled-pane:focused > .title > .arrow-button .arrow,
.accordion .titled-pane:expanded > .title > .arrow-button .arrow,
.accordion .titled-pane:expanded:focused > .title > .arrow-button .arrow {
    -fx-background-color: -fx-focus-color;
}

.accordion .titled-pane:focused > .title,
.accordion .titled-pane:expanded > .title,
.accordion .titled-pane:expanded:focused > .title {
    -fx-text-color: -fx-focus-color;
}

/*******************************************************************************
*                                                                              *
* SplitPane                                                                    *
*                                                                              *
*******************************************************************************/
/*
.split-pane {
    -fx-skin: "sp.it.pl.gui.objects.ImprovedSplitPaneSkin";
}
*/
.split-pane:horizontal > .split-pane-divider {
   -fx-border-color: transparent;
   -fx-background-color: transparent;
   -fx-padding: 1;
}
.split-pane:vertical > .split-pane-divider {
   -fx-border-color: transparent;
   -fx-background-color: transparent;
   -fx-padding: 1;
}
.split-pane *.vertical-grabber {
    -fx-padding: 0;
    -fx-background-color: transparent;
    -fx-background-insets: 0;
}
.split-pane *.horizontal-grabber {
    -fx-padding: 0;
    -fx-background-color: transparent;
    -fx-background-insets: 0;
}

.split-pane:collapsed > .split-pane-divider {
   -fx-background-color: -fx-pane-color;
   -fx-padding: 6;
}

/*******************************************************************************
 *                                                                             *
 * ColorPicker                                                                 *
 *                                                                             *
 ******************************************************************************/

.color-picker > .arrow-button {
    -fx-background-color: null;
   /*-fx-padding: 0.5em 0.667em 0.5em 0;*/ /* 6 8 6 0 */
}
.color-picker.split-button > .arrow-button  {
    -fx-background-color: -fx-outer-border, -fx-inner-border, -fx-body-color;
    -fx-background-insets: 1 1 1 0, 1, 2;
    -fx-background-radius: 0 3 3 0, 0 2 2 0, 0 1 1 0;
}
.color-picker.split-button:focused > .arrow-button {
    /*-fx-background-color: -fx-focus-color, -fx-inner-border, -fx-body-color !important;*/
    /*-fx-background-insets: 0, 1, 2;*/
    -fx-background-color: -fx-focus-color, -fx-inner-border, -fx-body-color, -fx-faint-focus-color, -fx-body-color;
    -fx-background-insets: 1 1 1 0, 1, 2, 1, 2.6;
    -fx-background-radius: 0 3 3 0, 0 2 2 0, 0 1 1 0, 0 1 1 0, 0 1 1 0;
}
.color-picker.split-button > .color-picker-label,
.color-picker.split-button:focused > .color-picker-label{
    -fx-background-color: null;
}
.color-picker.split-button > .arrow-button {
    /*-fx-background-color: -fx-outer-border, -fx-inner-border, -fx-body-color !important;*/
    /*-fx-padding: 0.5em 0.667em 0.5em 0.667em;*/ /* 6 8 6 8 */
}
.color-picker > .color-picker-label > .picker-color > .picker-color-rect {
    -fx-stroke: -fx-box-border;
}

.color-palette {
    -fx-spacing: 0.833333em; /* 10px */
    -fx-background-color:
        linear-gradient(to bottom,
            derive(-fx-color,-17%),
            derive(-fx-color,-30%)
        ),
        linear-gradient(to bottom, 
            derive(-fx-background,10%) 0%, 
            derive(-fx-background,-5%) 12%, 
            derive(-fx-background,15%) 88%, 
            derive(-fx-background,-10%) 100%);
    -fx-background-insets: 0, 1;
    -fx-background-radius: 6, 5;
    -fx-padding: 1em; /* 12 */
    -fx-effect: dropshadow( gaussian , rgba(0,0,0,0.2) , 12, 0.0 , 0 , 8 );
}
.color-palette > .color-picker-grid {
    -fx-padding: 0.5px;
    -fx-snap-to-pixel: false;
}
.color-palette > .color-picker-grid > .color-square {
    -fx-background-color: transparent;
    -fx-padding: 0.5px;
}
/* the color over which the user is hovering */
.color-palette > .color-picker-grid > .color-square:focused, 
.color-palette > .color-picker-grid > .color-square:selected:focused {
    -fx-background-color: -fx-faint-focus-color, -fx-focus-color;
    -fx-background-insets: -2,0;
    -fx-background-radius: 5,0;
    -fx-scale-x: 1.5;
    -fx-scale-y: 1.5;
}
/* the currently selected color */
.color-palette > .color-picker-grid > .color-square:selected {
    -fx-background-color: black;
} 
/* ------- CUSTOM COLOR DIALOG ------- */
.custom-color-dialog > .color-rect-pane {
    -fx-spacing: 0.75em;
    -fx-pref-height: 16.666667em;
    -fx-alignment: top-left;
    -fx-fill-height: true;
}

.custom-color-dialog .color-rect-pane .color-rect {
    -fx-min-width: 16.666667em;
    -fx-min-height: 16.666667em;
}

.custom-color-dialog .color-rect-pane .color-rect-border {
    -fx-border-color: derive(-fx-base, -20%);
}

.custom-color-dialog > .color-rect-pane #color-rect-indicator {
    -fx-background-color: null;
    -fx-border-color: white;
    -fx-border-radius: 0.4166667em;
    -fx-translate-x: -0.4166667em;
    -fx-translate-y: -0.4166667em;
    -fx-pref-width: 0.833333em;
    -fx-pref-height: 0.833333em;
    -fx-effect: dropshadow(three-pass-box, black, 2, 0.0, 0, 1);
}

.custom-color-dialog > .color-rect-pane > .color-bar {
    -fx-min-width: 1.666667em;
    -fx-min-height: 16.666667em;
    -fx-max-width: 1.666667em;
    -fx-border-color: derive(-fx-base, -20%);
}

.custom-color-dialog > .color-rect-pane > .color-bar > #color-bar-indicator {
    -fx-border-radius: 0.333333em;
    -fx-border-color: white;
    -fx-effect: dropshadow(three-pass-box, black, 2, 0.0, 0, 1);
    -fx-pref-width: 2em;
    -fx-pref-height: 0.833333em;
    -fx-translate-x: -0.1666667em;
    -fx-translate-y: -0.4166667em;
}

.custom-color-dialog  {
    -fx-background-color: -fx-background;
    -fx-padding: 1.25em;
    -fx-spacing: 1.25em;
}
.custom-color-dialog .controls-pane .current-new-color-grid #current-new-color-border {
    -fx-border-color: derive(-fx-base, -20%);
    -fx-border-width: 2px;
}

.custom-color-dialog .controls-pane .current-new-color-grid .color-rect {
    -fx-min-width: 10.666667em;
    -fx-min-height: 1.75em;
    -fx-pref-width: 10.666667em;
    -fx-pref-height: 1.75em;
}

.custom-color-dialog .transparent-pattern {
    -fx-background-image: url("pattern-transparent.png"); 
    -fx-background-repeat: repeat;
    -fx-background-size: auto;
}

.custom-color-dialog .controls-pane #spacer1 {
    -fx-min-height: 0.1666667em;
    -fx-max-height: 0.1666667em;
    -fx-pref-height: 0.1666667em;
}

.custom-color-dialog .controls-pane #spacer2 {
    -fx-min-height: 1em;
    -fx-max-height: 1em;
    -fx-pref-height: 1em;
}

.custom-color-dialog .controls-pane #settings-pane {
    -fx-hgap: 0.4166667em;
    -fx-vgap: 0.3333333em;
}

.custom-color-dialog .controls-pane #settings-pane .settings-label {
    -fx-min-width: 5.75em;
}

.custom-color-dialog .controls-pane #settings-pane .settings-unit {
    -fx-max-width: 1em;
}

.custom-color-dialog .controls-pane #settings-pane .slider {
    -fx-pref-width: 8.25em;
}

.custom-color-dialog .controls-pane .color-input-field {
    -fx-pref-column-count: 3;
    -fx-max-width: 3.25em;
    -fx-min-width: 3.25em;
    -fx-pref-width: 3.25em;
}

.custom-color-dialog .controls-pane .web-field {
    -fx-pref-column-count: 6;
    -fx-pref-width: 8.25em;
}

.custom-color-dialog .controls-pane #spacer-side {
    -fx-min-width: 0.5em;
    -fx-pref-width: 0.5em;
}

.custom-color-dialog .controls-pane #spacer-bottom {
    -fx-pref-height: 0.833333em;
    -fx-min-height: 0.833333em;
}

.custom-color-dialog .controls-pane .customcolor-controls-background {
    -fx-background-color: -fx-text-box-border, -fx-control-inner-background;
    -fx-background-insets: 
        0.8333333em 0 0.4166667em 0,
        1em 0.166667em 0.5833333em 0.166667em;
    -fx-background-radius: 0.3333333em, 0.166667em;
}

.custom-color-dialog .controls-pane .current-new-color-grid .label {
    -fx-padding: 0 0 0 0.4166667em;
}

.custom-color-dialog .controls-pane #buttons-hbox {
    -fx-spacing: 0.333333em;
    -fx-padding: 1em 0 0 0;
    -fx-alignment: bottom-right;
}

/*******************************************************************************
 *                                                                             *
 * Pagination                                                                  *
 *                                                                             *
 ******************************************************************************/

.pagination {
    -fx-padding: 0;        
    -fx-arrows-visible: true;
    -fx-tooltip-visible: true;
    -fx-page-information-visible: true;
    -fx-page-information-alignment: bottom;
    -fx-arrow-button-gap: 0;
}
.pagination > .page {
    -fx-background-color: transparent;
}
.pagination > .pagination-control {
    -fx-background-color: transparent;
    -fx-font-size: 0.82em;
}
.pagination > .pagination-control > .control-box {
    -fx-padding: 5px 0 0 0;
    -fx-spacing: 2;
    -fx-alignment: center;
}
.pagination > .pagination-control > .control-box > .left-arrow-button {
    -fx-background-radius: 3 0 0 3, 3 0 0 3, 2 0 0 2, 1 0 0 1;
    -fx-background-insets: 0 0 -1 5, 0 0 0 5, 1 1 1 6, 2 2 2 7;
    -fx-padding: 0em 0.417em 0em 0.833em; /* 0 5 0 10 */
}
.pagination > .pagination-control > .control-box > .right-arrow-button {
    -fx-background-radius: 0 3 3 0, 0 3 3 0, 0 2 2 0, 0 1 1 0;
    -fx-background-insets: 0 5 -1 0, 0 5 0 0, 1 6 1 1, 2 7 2 2;
    -fx-padding: 0em 0.75em 0em 0.417em; /* 0 9 0 5 */
}
.pagination > .pagination-control .left-arrow {
    -fx-background-color: -fx-mark-highlight-color, -fx-mark-color;
    -fx-background-insets: 1 0 -1 0, 0;
    -fx-padding: 0.375em 0.291em 0.375em 0.291em;
    -fx-shape: "M 0 0 L -13 7 L 0 13 z";
    -fx-scale-shape: true;
}
.pagination > .pagination-control .right-arrow {
    -fx-background-color: -fx-mark-highlight-color, -fx-mark-color;
    -fx-background-insets: 1 0 -1 0, 0;
    -fx-padding: 0.375em 0.291em 0.375em 0.291em;
    -fx-shape: "M 0 0 L 13 7 L 0 13 z";
    -fx-scale-shape: true;
}
.pagination > .pagination-control > .control-box > .bullet-button {   
   -fx-background-radius: 0, 4em, 4em, 4em, 4em;
   -fx-padding: 0.333em;
   -fx-background-color: transparent, -fx-outer-border, -fx-inner-border, -fx-body-color;
   -fx-background-insets: 0, 5,  6,  7;
}
.pagination > .pagination-control > .control-box > .bullet-button:selected {   
    -fx-base: -fx-accent;
}
.pagination.bullet > .pagination-control > .control-box {
    -fx-spacing: 0;
    -fx-alignment: center;
}
.pagination.bullet > .pagination-control > .control-box > .left-arrow-button {
    -fx-background-radius: 4em;
    -fx-background-insets: 0, 1, 2;
    -fx-padding: 0em 0.25em 0em 0.083em; /* 0 3 0 1 */
} 
.pagination.bullet > .pagination-control > .control-box > .right-arrow-button {
    -fx-background-radius: 4em;
    -fx-background-insets: 0, 1, 2;
    -fx-padding: 0em 0.083em 0em 0.25em; /* 0 1 0 3 */
}
.pagination > .pagination-control > .control-box > .number-button {
    -fx-background-radius: 0;
    -fx-padding: 0.166667em 0.25em 0.25em 0.333em;
    -fx-background-color: -fx-shadow-highlight-color, -fx-outer-border, -fx-inner-border, -fx-body-color;
}
.pagination > .pagination-control > .control-box > .number-button:selected {   
    -fx-base: -fx-accent;
}
.pagination > .pagination-control > .page-information {   
    -fx-padding: 0.416em 0 0 0;
}

/*******************************************************************************
 *                                                                             *
 * Customised CSS for controls placed directly within cells                    *
 *                                                                             *
 ******************************************************************************/

.cell > .choice-box {
    -fx-background-color: transparent;
    -fx-background-insets: 0;
    -fx-background-radius: 0;
    /*-fx-padding: 0.0em 0.5em 0.0em 0.0em;*/ /* 0 6 0 0 */
    -fx-alignment: CENTER_LEFT;
    -fx-content-display: LEFT;
}
.cell > .choice-box > .label {
    /*-fx-padding: 0em 0.333333em 0.0em 0.333333;*/ /* 2 4 3 6 */
}
.cell:focused:selected > .choice-box > .label {
    -fx-text-fill: white;
}
.cell:focused:selected > .choice-box > .open-button > .arrow {
    -fx-background-color: -fx-mark-highlight-color, white;
}

/*******************************************************************************
 *                                                                             *
 * List, Tree, Table COMMON                                                    *
 *                                                                             *
 ******************************************************************************/

.cell {
    -fx-background-color: null;
    -fx-border-color: null;
    -fx-padding: 0 2 0 2;
    -fx-text-fill: -fx-def-font-color;
}

/* remove double borders from scrollbars */
.list-view > .virtual-flow > .scroll-bar:vertical,
.tree-view > .virtual-flow > .scroll-bar:vertical,
.table-view > .virtual-flow > .scroll-bar:vertical,
.tree-table-view > .virtual-flow > .scroll-bar:vertical {
    -fx-background-insets: 0;
    -fx-padding: 0;
}
.list-view > .virtual-flow > .scroll-bar:horizontal,
.tree-view > .virtual-flow > .scroll-bar:horizontal,
.table-view > .virtual-flow > .scroll-bar:horizontal,
.tree-table-view > .virtual-flow > .scroll-bar:horizontal {
    -fx-background-insets: 0;
    -fx-padding: 0;
}
.list-view > .virtual-flow > .corner,
.tree-view > .virtual-flow > .corner,
.table-view > .virtual-flow > .corner,
.tree-table-view > .virtual-flow > .corner {
    -fx-background-color: null;
}
/* standard cell */
.list-cell,
.tree-cell {}
/* Selected rows focused control*/
.list-view:focused > .virtual-flow > .clipped-container > .sheet > .list-cell:filled:selected,
.tree-view:focused > .virtual-flow > .clipped-container > .sheet > .tree-cell:filled:selected,
.table-view:focused > .virtual-flow > .clipped-container > .sheet > .table-row-cell:filled:selected,
.tree-table-view:focused > .virtual-flow > .clipped-container > .sheet > .tree-table-row-cell:filled:selected,
.table-view:focused > .virtual-flow > .clipped-container > .sheet > .table-row-cell .table-cell:selected,
.tree-table-view:focused > .virtual-flow > .clipped-container > .sheet > .tree-table-row-cell .tree-table-cell:selected {
    -fx-background-color: rgba(0, 0, 0, 0.2);
    -fx-text-fill: -fx-sel-font-color;
}
/* Selected when control is not focused */
.list-cell:filled:selected,
.tree-cell:filled:selected,
.table-row-cell:filled:selected,
.tree-table-row-cell:filled:selected,
.table-row-cell:filled > .table-cell:selected,
.tree-table-row-cell:filled > .tree-table-cell:selected {
    -fx-background-color: rgba(0, 0, 0, 0.2);
    -fx-text-fill: -fx-sel-font-color;
}
/* focused cell (keyboard navigation) */
.list-view:focused > .virtual-flow > .clipped-container > .sheet > .list-cell:focused,
.tree-view:focused > .virtual-flow > .clipped-container > .sheet > .tree-cell:focused,
.table-view:focused:row-selection > .virtual-flow > .clipped-container > .sheet > .table-row-cell:focused,
.tree-table-view:focused:row-selection > .virtual-flow > .clipped-container > .sheet > .tree-table-row-cell:focused,
.table-view:focused:cell-selection > .virtual-flow > .clipped-container > .sheet > .table-row-cell > .table-cell:focused,
.tree-table-view:focused:cell-selection > .virtual-flow > .clipped-container > .sheet > .tree-table-row-cell > .tree-table-cell:focused {
    -fx-background-color: null;
    /*-fx-background-insets: 0, 1, 2;*/
}

/*******************************************************************************
 *                                                                             *
 * ListView and ListCell                                                       *
 *                                                                             *
 ******************************************************************************/

.list-cell {}
.list-cell:odd {
    -fx-background-color: null;
}

/*******************************************************************************
 *                                                                             *
 * TreeView and TreeCell                                                       *
 *                                                                             *
 ******************************************************************************/

.tree-cell {
    -fx-indent: 1em;
}
.tree-cell .label {
    -fx-padding: 0.0em 0.0em 0.0em 0.25em; /* 0 0 0 3 */
}
.tree-cell > .tree-disclosure-node,
.tree-table-row-cell > .tree-disclosure-node {
    -fx-padding: 4 6 4 8;
}
.tree-cell > .tree-disclosure-node > .arrow,
.tree-table-row-cell > .tree-disclosure-node > .arrow {
/*    -fx-background-color: -fx-text-background-color;*/
    -fx-background-color: -fx-def-font-color;
    -fx-padding: 0.333333em 0.229em 0.333333em 0.229em; /* 4 */
    -fx-shape: "M 0 -3.5 L 4 0 L 0 3.5 z";
}
.tree-cell:expanded > .tree-disclosure-node > .arrow,
.tree-table-row-cell:expanded > .tree-disclosure-node > .arrow {
    -fx-rotate: 90;
}

/*******************************************************************************
 *                                                                             *
 * TableView                                                                   *
 *                                                                             *
 ******************************************************************************/

.table-view,
.tree-table-view {
    /* Constants used throughout the table-view. */
    -fx-table-header-border-color: -fx-box-border;
    -fx-table-cell-border-color: derive(-fx-color,5%);
}
/***** ROW CELLS **************************************************************/
/* Each row in the table is a table-row-cell. Inside a table-row-cell is any
   number of table-cell.*/
.table-row-cell {
    -fx-padding: 0;
}
.table-row-cell:odd {
    -fx-background-color: null;
}
.table-row-cell:empty {
    -fx-background-color: null;
}
/***** INDIVIDUAL CELLS ********************************************************/
.table-cell {}
.table-view > .virtual-flow > .clipped-container > .sheet > .table-row-cell .table-cell:selected,
.tree-table-view > .virtual-flow > .clipped-container > .sheet > .tree-table-row-cell .tree-table-cell:selected {
    -fx-background-color: -fx-table-cell-border-color, -fx-background;
    -fx-background-insets: 0, 0 0 1 0;
}
/* When in constrained resize mode, the right-most visible cell should not have
   a right-border, as it is not possible to get this cleanly out of view without
   introducing horizontal scrollbars (see RT-14886). */
.table-view:constrained-resize > .virtual-flow > .clipped-container > .sheet > .table-row-cell > .table-cell:last-visible,
.tree-table-view:constrained-resize > .virtual-flow > .clipped-container > .sheet > .tree-table-row-cell > .tree-table-cell:last-visible {
    -fx-border-color: null;
}
/***** HEADER **********************************************************************/
/* The column-resize-line is shown when the user is attempting to resize a column. */
.table-view .column-resize-line,
.tree-table-view .column-resize-line {
    -fx-background: -fx-def-font-color;
    -fx-opacity: 0.6;
    -fx-background-color: -fx-background;
    -fx-padding: 0.0em 0.0416667em 0.0em 0.0416667em; /* 0 0.571429 0 0.571429 */
}
/* This is the area behind the column headers. An ideal place to specify background
   and border colors for the whole area (not individual column-header's). */
.table-view .column-header-background,
.tree-table-view > .column-header-background {
    -fx-background-color: null;
    -fx-background-insets: 0;
}
/* The column header row is made up of a number of column-header, one for each
   TableColumn, and a 'filler' area that extends from the right-most column
   to the edge of the table-view, or up to the 'column control' button. */
.table-view .column-header,
.tree-table-view .column-header,
.table-view .filler,
.tree-table-view .filler,
.table-view > .column-header-background > .show-hide-columns-button,
.tree-table-view > .column-header-background > .show-hide-columns-button,
.table-view:constrained-resize .filler,
.tree-table-view:constrained-resize .filler {
    -fx-background-color: null;
    -fx-background-insets: 0;
}
.table-view .filler,
.tree-table-view .filler,
.table-view:constrained-resize .filler,
.tree-table-view:constrained-resize .filler {
    -fx-background-color: null;
    -fx-background-insets: 0;
}
.table-view > .column-header-background > .show-hide-columns-button,
.tree-table-view > .column-header-background > .show-hide-columns-button {
    -fx-background-insets: 0, 0 0 1 1, 1 1 2 2;
}
.table-view .column-header .sort-order-dots-container,
.tree-table-view .column-header .sort-order-dots-container{
    -fx-padding: 2 0 2 0;
}
.table-view .column-header .sort-order,
.tree-table-view .column-header .sort-order{
    -fx-font-size: 0.916667em; /* 11pt - 1 less than the default font */
}
.table-view .column-header .sort-order-dot,
.tree-table-view .column-header .sort-order-dot {
    -fx-background-color: -fx-def-font-color;
    -fx-padding: 0.115em;
    -fx-background-radius: 0.115em;
}
.table-view .column-header .label,
.tree-table-view .column-header .label {
    -fx-alignment: center;
}

/* Plus Symbol - like table menu button for controlling columns visibility*/
.table-view .show-hide-column-image,
.tree-table-view .show-hide-column-image {
    -fx-background-color: -fx-def-font-color;
    -fx-padding: 0.25em; /* 3px */
    -fx-shape: "M398.902,298.045c0.667,0,1.333,0,2,0c0,0.667,0,1.333,0,2c0.667,0,1.333,0,2,0c0,0.667,0,1.333,0,2c-0.667,0-1.333,0-2,0c0,0.666,0,1.332,0,1.999c-0.667,0-1.333,0-2,0c0-0.667,0-1.333,0-1.999c-0.666,0-1.333,0-1.999,0c0-0.667,0-1.334,0-2c0.666,0,1.333,0,1.999,0C398.902,299.378,398.902,298.711,398.902,298.045z"; 
}
/* When a column is being 'dragged' to be placed in a different position, there
   is a region that follows along the column header area to indicate where the
   column will be dropped. This region can be styled using the .column-drag-header
   name. */
.table-view .column-drag-header,
.tree-table-view .column-drag-header {
    -fx-background: -fx-accent;
    -fx-background-color: black;
    -fx-border-color: transparent;
    -fx-opacity: 0.5;
}
/* Semi-transparent overlay to indicate the column that is currently being moved */
.table-view .column-overlay,
.tree-table-view .column-overlay {
    -fx-background-color: black;
    -fx-opacity: 0.2;
}
/* Header Sort Arrows */
.table-view /*> column-header-background > nested-column-header >*/ .arrow,
.tree-table-view /*> column-header-background > nested-column-header >*/ .arrow {
    -fx-background-color: -fx-def-font-color;
    -fx-padding: 0.25em 0.3125em 0.25em 0.3125em; /* 3 3.75 3 3.75 */
    -fx-shape: "M 0 0 h 7 l -3.5 4 z";
}
/* This is shown when the table has no rows and/or no columns. */
.table-view .empty-table,
.tree-table-view .empty-table {
    -fx-background-color: white;
    -fx-font-size: 1.166667em; /* 14pt - 2 more than the default font */
}

/*******************************************************************************
 *                                                                             *
 * Table Cells                                                                 *
 *                                                                             *
 ******************************************************************************/

.check-box-table-cell {
    -fx-alignment: center;
    -fx-padding: 0;
}
.check-box-table-cell > .check-box {
    -fx-font-size: 0.8em;
    -fx-opacity: 1;
    -fx-padding: 0 0 1 0;
}
.check-box-table-cell > .check-box > .box {
    -fx-background-color: -fx-outer-border, -fx-background;
    -fx-background-insets: 0,1;
}
.check-box-table-cell > .check-box:selected > .box > .mark {
    -fx-background-color: -fx-text-background-color;
    -fx-background-insets: 0;
}
.table-view:focused > .virtual-flow > .clipped-container > .sheet > .table-row-cell:filled > .check-box-table-cell:selected > .check-box > .box,
.tree-table-view:focused > .virtual-flow > .clipped-container > .sheet > .tree-table-row-cell:filled > .check-box-table-cell:selected > .check-box > .box,
.table-view:focused > .virtual-flow > .clipped-container > .sheet > .table-row-cell:filled:selected > .check-box-table-cell > .check-box > .box,
.tree-table-view:focused > .virtual-flow > .clipped-container > .sheet > .tree-table-row-cell:filled:selected > .check-box-table-cell > .check-box > .box {
    -fx-background-color: derive(-fx-accent,40%), -fx-background;
}

/*******************************************************************************
 *                                                                             *
 * TreeTableView                                                               *
 *                                                                             *
 * Note: A lot of the CSS for TreeTableView is included with the TreeView and  *
 * TableView CSS styles elsewhere in modena.css (as they are the same, just   *
 * targeting different CSS style classes).                                     *
 ******************************************************************************/

.tree-table-row-cell {
    -fx-background: -fx-control-inner-background;
    -fx-background-color: -fx-background;
    -fx-padding: 0;
    -fx-text-fill: -fx-text-background-color;
    -fx-indent: 1em;
}
.tree-table-cell {
    /* tree-table-cell needs slightly different padding to make the text sit at
    the right height for the arrow */
    -fx-padding: 0.25em 0.166667em 0.083em 0.166667em; /* 3 2 1 2 , plus border adds 1px */
    -fx-background-color: null;
    -fx-border-color: transparent -fx-table-cell-border-color transparent transparent;
    -fx-cell-size: 2.0em; /* 24 */
    -fx-text-fill: -fx-text-background-color;
}

/*******************************************************************************
 *                                                                             *
 * Combinations                                                                *
 *                                                                             *
 * This section is for special handling of when one control is nested inside   *
 * another control. There are many cases where we would end up with ugly       *
 * double borders that are fixed here.                                         *
 *                                                                             *
 ******************************************************************************/

.tab-pane > * > .table-view,
.tab-pane > * > .tree-table-view,
.tab-pane > * > .list-view,
.tab-pane > * > .tree-view,
.tab-pane > * > .scroll-pane,
.tab-pane > * > .split-pane,
.tab-pane > * > .text-area,
.tab-pane > * > .html-editor,
.split-pane > * > .tab-pane,
.split-pane > * > .table-view,
.split-pane > * > .tree-table-view,
.split-pane > * > .list-view,
.split-pane > * > .tree-view,
.split-pane > * > .scroll-pane,
.split-pane > * > .split-pane,
.split-pane > * > .text-area,
.split-pane > * > .html-editor {
    -fx-background-insets: 0;
    -fx-padding: 0;
 }
.tab-pane.floating > * > .table-view,
.tab-pane.floating > * > .tree-table-view,
.tab-pane.floating > * > .list-view,
.tab-pane.floating > * > .tree-view,
.tab-pane.floating > * > .scroll-pane,
.tab-pane.floating > * > .split-pane,
.tab-pane.floating > * > .text-area,
.tab-pane.floating > * > .html-editor {
    -fx-background-insets: 0;
    -fx-padding: -1;
}
.split-pane > * > .accordion > .titled-pane > *.content {
    -fx-border-color: null;
    -fx-border-insets: 0;
}
.split-pane > * > .accordion > .titled-pane > .title  {
    -fx-background-insets: 0,1 0 1 0, 2 1 2 1;
}
.split-pane > * > .accordion > .first-titled-pane > .title  {
    -fx-background-insets: 0,0 0 1 0, 1 1 2 1;
}
.split-pane > * > .accordion > .titled-pane:collapsed > .title  {
    -fx-background-insets: 0,1 0 0 0, 2 1 1 1;
}
.split-pane > * > .accordion > .first-titled-pane:collapsed > .title  {
    -fx-background-insets: 0,0 0 0 0, 1 1 1 1;
}
.titled-pane > * > * > .split-pane,
.titled-pane > * > * > .text-area,
.titled-pane > * > * > .html-editor,
.titled-pane > * > * > .list-view,
.titled-pane > * > * > .tree-view,
.titled-pane > * > * > .table-view,
.titled-pane > * > * > .tree-table-view,
.titled-pane > * > * > .scroll-pane {
    -fx-background-color: null;
    -fx-background-insets: 0, 0;
    -fx-padding: 0;
}
.titled-pane > * > * > AnchorPane,
.titled-pane > * > * > BorderPane,
.titled-pane > * > * > FlowPane,
.titled-pane > * > * > GridPane,
.titled-pane > * > * > HBox,
.titled-pane > * > * > Pane,
.titled-pane > * > * > StackPane,
.titled-pane > * > * > TilePane,
.titled-pane > * > * > VBox {
    -fx-padding: 0.8em;
}

/*******************************************************************************
 *                                                                             *
 * DatePicker                                                                  *
 *                                                                             *
 ******************************************************************************/

.date-picker > .arrow-button > .arrow {
    -fx-shape: "M0,0v9h9V0H0z M2,8H1V7h1V8z M2,6H1V5h1V6z M2,4H1V3h1V4z M4,8H3V7h1V8z M4,6H3V5h1V6z M4,4H3V3h1V4z M6,8H5V7h1V8z M6,6H5 V5h1V6z M6,4H5V3h1V4z M8,8H7V7h1V8z M8,6H7V5h1V6z M8,4H7V3h1V4z";
    -fx-background-color: -fx-mark-highlight-color, -fx-mark-color;
    -fx-background-insets: 1 0 -1 0, 0;
    -fx-padding: 0.416667em 0.416667em 0.333333em 0.333333em; /* 5 5 4 4 */
    -fx-scale-shape: true;
}

.date-picker-popup {
     -fx-background-color:
        linear-gradient(to bottom,
            derive(-fx-color,-17%),
            derive(-fx-color,-30%)
        ),
        -fx-control-inner-background;
    -fx-background-insets: 0, 1;
    -fx-background-radius: 0;
    -fx-alignment: CENTER; /* VBox */
    -fx-spacing: 0; /* VBox */
    -fx-padding: 0.083333em; /* 1 1 1 1 */
    -fx-effect: dropshadow( gaussian , rgba(0,0,0,0.2) , 12, 0.0 , 0 , 8 );
}
.date-picker-popup > .month-year-pane {
    -fx-padding: 0.588883em 0.5em 0.666667em 0.5em; /* 7 6 8 6 */
    -fx-background-color: derive(-fx-box-border,30%), linear-gradient(to bottom, derive(-fx-base,-3%), derive(-fx-base,5%) 50%, derive(-fx-base,-3%));
    -fx-background-insets: 0 0 0 0, 0 0 1 0;
}
.date-picker-popup > * > .spinner {
    -fx-spacing: 0.25em; /* 3 */
    -fx-alignment: CENTER;
    -fx-fill-height: false;
}
.date-picker-popup > * > .spinner > .button {
    -fx-background-color: -fx-outer-border, -fx-inner-border, -fx-body-color;
    -fx-background-insets: 0, 1, 2;
    -fx-color: transparent;
    -fx-background-radius: 0;
}
.date-picker-popup > * > .spinner > .button:focused {
    -fx-background-color: -fx-focus-color, -fx-inner-border, -fx-body-color, -fx-faint-focus-color, -fx-body-color;
    -fx-color: -fx-hover-base;
    -fx-background-insets: -0.2, 1, 2, -1.4, 2.6;
}
.date-picker-popup > * > .spinner > .button:hover {
    -fx-color: -fx-hover-base;
}
.date-picker-popup > * > .spinner > .button:armed {
    -fx-color: -fx-pressed-base;
}
.date-picker-popup > * > .spinner > .left-button {
    -fx-padding: 0 0.333333em 0 0.25em; /* 0 4 0 3 */
}
.date-picker-popup > * > .spinner > .right-button {
    -fx-padding: 0 0.25em 0 0.333333em; /* 0 3 0 4 */
}
.date-picker-popup > * > .spinner > .button > .left-arrow,
.date-picker-popup > * > .spinner > .button > .right-arrow {
    -fx-background-color: -fx-mark-highlight-color, derive(-fx-base,-45%);
    -fx-background-insets: 1 0 -1 0, 0;
    -fx-padding: 0.333333em 0.166667em 0.333333em 0.166667em; /* 4 2 4 2 */
    -fx-effect: dropshadow(two-pass-box , -fx-shadow-highlight-color, 1, 0.0 , 0, 1.4);
}
.date-picker-popup > * > .spinner > .button:hover > .left-arrow,
.date-picker-popup > * > .spinner > .button:hover > .right-arrow {
    -fx-background-color: -fx-mark-highlight-color, derive(-fx-base,-50%);
}
.date-picker-popup > * > .spinner > .button:pressed > .left-arrow,
.date-picker-popup > * > .spinner > .button:pressed > .right-arrow {
    -fx-background-color: -fx-mark-highlight-color, derive(-fx-base,-55%);
}
.date-picker-popup > * > .spinner > .button > .left-arrow {
    -fx-padding: 0.333333em 0.25em 0.333333em 0.166667em; /* 4 3 4 2 */
    -fx-shape: "M5.997,5.072L5.995,6.501l-2.998-4l2.998-4l0.002,1.43l-1.976,2.57L5.997,5.072z";
    -fx-scale-shape: true;
}
.date-picker-popup > * > .spinner > .button > .right-arrow {
    -fx-padding: 0.333333em 0.25em 0.333333em 0.166667em; /* 4 3 4 2 */
    -fx-shape: "M2.998-0.07L3-1.499l2.998,4L3,6.501l-0.002-1.43l1.976-2.57L2.998-0.07z";
    -fx-scale-shape: true;
}
.date-picker-popup > * > .spinner > .label {
    -fx-alignment: CENTER;
}
.date-picker-popup > .month-year-pane > .secondary-label {
    -fx-alignment: BASELINE_CENTER;
    -fx-padding: 0.5em 0 0 0; /* 6 0 0 0 */
    -fx-text-fill: #f3622d;
}

.date-picker-popup > .calendar-grid {
    -fx-background-color: derive(-fx-selection-bar-non-focused, 60%);
    /*-fx-background-insets: 1 0 0 0;*/
    -fx-padding: 0;
}
.date-picker-popup > * > .date-cell { 
    -fx-background-color: transparent;
    -fx-background-insets: 1, 2;
    -fx-padding: 0;
    -fx-alignment: BASELINE_CENTER;
    -fx-opacity: 1.0;
}
.date-picker-popup > * > .day-name-cell,
.date-picker-popup > * > .week-number-cell {
    -fx-font-size: 0.916667em; 
}
.date-picker-popup > * > .week-number-cell {
    -fx-padding: 0.333333em 0.583333em 0.333333em 0.583333em; /* 4 7 4 7 */
    -fx-border-color: -fx-control-inner-background;
    -fx-border-width: 1px;
    -fx-background: -fx-control-inner-background;
    -fx-background-color: -fx-background;
    -fx-text-fill: -fx-accent;
}
.date-picker-popup > * > .day-cell {
    -fx-padding: 0.333333em 0.583333em 0.333333em 0.583333em; /* 4 7 4 7 */
    -fx-border-color: derive(-fx-selection-bar-non-focused, 60%);
    -fx-border-width: 1px;
    -fx-font-size: 1em;
    -fx-background: -fx-control-inner-background;
    -fx-background-color: -fx-background;
    -fx-text-fill: -fx-text-background-color;
}
.date-picker-popup > * > .hijrah-day-cell {
    -fx-alignment: TOP_LEFT;
    -fx-padding: 0.083333em 0.333333em 0.083333em 0.333333em; /* 1 4 1 4 */
    -fx-cell-size: 2.75em;
}
.date-picker-popup > * > .day-cell > .secondary-text {
    -fx-fill: #f3622d;
}
.date-picker-popup > * > .today {
    -fx-background-color: -fx-control-inner-background, derive(-fx-selection-bar-non-focused, -20%), -fx-control-inner-background;
    -fx-background-insets: 1, 2, 3;
}
.date-picker-popup > * > .day-cell:hover,
.date-picker-popup > * > .selected,
.date-picker-popup > * > .previous-month.selected,
.date-picker-popup > * > .next-month.selected {
    -fx-background: -fx-selection-bar;
}
.date-picker-popup > * > .previous-month:hover,
.date-picker-popup > * > .next-month:hover {
    -fx-background: -fx-selection-bar-non-focused;
}
.date-picker-popup > * > .today:hover,
.date-picker-popup > * > .today.selected {
    -fx-background-color: -fx-selection-bar, derive(-fx-selection-bar-non-focused, -20%),-fx-selection-bar;
}
.date-picker-popup > * > .day-cell:focused,
.date-picker-popup > * > .today:focused {
    -fx-background-color: -fx-control-inner-background, -fx-cell-focus-inner-border, -fx-control-inner-background;
    -fx-background-insets: 1, 2, 3;
}
.date-picker-popup > * > .day-cell:focused:hover,
.date-picker-popup > * > .today:focused:hover,
.date-picker-popup > * > .selected:focused,
.date-picker-popup > * > .today.selected:focused {
    -fx-background-color: -fx-selection-bar, -fx-cell-focus-inner-border, -fx-selection-bar;
}
.date-picker-popup > * > .previous-month,
.date-picker-popup > * > .next-month {
    -fx-background: derive(-fx-control-inner-background, -4%);
}
.date-picker-popup > * > .day-cell:hover > .secondary-text,
.date-picker-popup > * > .previous-month > .secondary-text,
.date-picker-popup > * > .next-month > .secondary-text,
.date-picker-popup > * > .selected > .secondary-text {
    -fx-fill: -fx-text-background-color;
}
.date-picker-popup > * > .previous-month.today,
.date-picker-popup > * > .next-month.today {
    -fx-background-color: derive(-fx-control-inner-background, -4%), derive(-fx-selection-bar-non-focused, -20%), derive(-fx-control-inner-background, -4%);
}

.date-picker-popup > * > .previous-month.today:hover,
.date-picker-popup > * > .next-month.today:hover {
    -fx-background-color: -fx-selection-bar-non-focused, derive(-fx-selection-bar-non-focused, -20%), -fx-selection-bar-non-focused;
}


/******************************************************************************
 * Popup.
 */
.popup {
    -fx-background-color: transparent;
}

/******************************************************************************
 * Tooltip.
 */
.tooltip {    
    -fx-text-fill: -fx-def-font-color;
    -fx-background-color: -fx-popup-def-bgr-color;
    -fx-background-radius: 5;
    -fx-border-width: 1;
    -fx-border-color: linear-gradient(from 0% 0% to 100% 100%, transparent 0%, -fx-def-font-color 50%, transparent 100%);
    -fx-border-radius: 5;
    -fx-padding: 0.5em 1em 0.5em 1em;
}









/******************************************************************************
 *
 *  THE APPLICATION OVERRIDES OF JAVAFX
 *
 ******************************************************************************/

.list-view,
.table-view,
.tree-view,
.tree-table-view {
    -fx-fixed-cell-size: 1.5em;
}

.combo-box-popup > .list-view {
    -fx-fixed-cell-size: 2em;
}

/******************************************************************************
 *
 *  THE APPLICATION ELEMENTS
 *
 ******************************************************************************/


/************************************ FONTS ***********************************/
.text-style-normal {
    -fx-font-style: normal;
}
.text-style-italic {
    -fx-font-style: italic;
}

.text-weight-normal {
    -fx-font-weight: normal;
}
.text-weight-bold {
    -fx-font-weight: bold;
}

/************************************ TEXT ************************************/

.text-input:align-left *.text {
    -fx-text-alignment: left;
}
.text-input:align-right *.text {
    -fx-text-alignment: right;
}
.text-input:align-center *.text {
    -fx-text-alignment: center;
}
.text-input:align-justify *.text {
    -fx-text-alignment: justify;
}

/************************************ ICONS ***********************************/

/** 
 * Icon
 * Text using glyph to make icon.
 * inherits: nothing
 * pseudoclasses: selected - used to achieve hover effect even when mouse is not hovering
 * properties: -glyph-name - String of the glyph
 *             -glyph-size - size
 */
.icon {
    -fx-fill: -fx-def-font-color;
    -glyph-name: "FontAwesomeIcon.CLOSE";
    -glyph-size: 1em;
    -glyph-gap: 12;
}

.icon:hover {
    -fx-fill: -fx-def-font-color-hover;
    -fx-effect: dropshadow(gaussian, rgb(130,170,255), 12,0 , 0,0);
}
.icon:disabled {
    -fx-opacity: 0.4; /* imitate disabled style, should be consistent with it */
}

/**
 * Icon used as graphics in menu bars, context menus, etc
 * inherits: .icon
 */
.embedded-icon {}
.embedded-icon:disabled {
   -fx-opacity: 1;  /* this is a bug fix to apply disabled state properly */
}

/** 
 * Toggle icon - checkbox
 * inherits: .icon
 * pseudoclasses: selected
 */
.check-icon {
   -glyph-name: "FontAwesomeIcon.TOGGLE_OFF";
}
.check-icon:selected {
   -glyph-name: "FontAwesomeIcon.TOGGLE_ON";
}

/** 
 * Used for check icons that use single icon for selected/unselected and signal this state
 * by style instead.
 * inherits: .check-icon
 */
.check-icon-disabling {
    opacity: 1;
}
.check-icon-disabling:selected {
    opacity: 0.4; /* imitate disabled style, should be consistent with it */
}

/** 
 * Check icon used to negate filter predicates
 * inherits: .check-icon
 */
.filter-negate-icon {
   -glyph-name: "FontAwesomeIcon.CIRCLE";
}
.filter-negate-icon:selected {
   -glyph-name: "FontAwesomeIcon.CIRCLE_ALT";
}

/**
 * Resize icon for resizing popups and the like.
 * inherits: .icon
 */
.resize-content-icon {
   -glyph-name: "MaterialDesignIcon.RESIZE_BOTTOM_RIGHT";
   scaleX: 1.5;
   scaleY: 1.5;
}

/***********************************************************************************************************************

/* Default 'block'. Several elements subclass block but some can use it directly
   too. Use to set default properties for all blocks and block derived classes.
   One can for example make several GUI layout elements appear the same.

   Subclasses: window > .header, area, area-controls, layouter-element,
               .item-picker-element
   Pseudoclasses: dragged (all subclasses inherit those)
   Dev note: assigning a subclass styleclass to a javaFX object does not automatically
            assign it area too. Must be done manually.
    */
.block {
    -fx-background-color: -fx-pane-color;
}


/************************************ WINDOW ***************************************************************************
 * Window. More specifically its root pane. 
 * inherits: .root
 * pseudoclasses: focused, hover, resized, moved, fullscreen
 */
.window {}
.window:hover {}
.window:focused {}
.window:resized {}
.window:moved {
    -fx-background-radius: 5;
}
.window:fullscreen {}

/* 
 * Empty layer right above background for brg-image. It is possible to use more
 * complex backgrounds by specifying both .background and .bgr-image while using
 * sub 1 opacity
 * an example would be a slight image overlay over background
 */
.bgr-image {
    /*-fx-background-image: url("bgr.jpg");*/
    /* This causes unexpected bug, the image is not resized properly.
     * Solution: simply define the image in the skin, just like here. I do not know why
     * inheriting this causes resize bugs...
     */
    -fx-background-size: stretch;
}

/*
 * Window header
 * inherits: .header
 */
.window .header {
    -fx-background-color: -fx-pane-color;
}

/*
 * Left, right, bottom borders of the window. There is no top border as there is
 * a header instead. When header collapses it turns into top border.
 * Skinning both header and border similarly is recommended
 */
.w-border {
    -fx-background-color: -fx-pane-color;
}

/**********************************************************************************************************************/

/** 
 * Pane border created with path.
 * The path is build out of multiple path objects and does not necessarily create 
 * a single visual shape
 * extends .path, .shape
 */
.path-border {
    -fx-fill: null;
    -fx-stroke: -fx-def-font-color;
    -fx-stroke-width: 2;
    -fx-stroke-type: inside;
}

/** 
 * Area pane border.
 * inherits: .path-border.
 */
.area-path-border {
    -fx-fill: null;
    -fx-stroke: -fx-pane-color;
    -fx-stroke-width: 2;
    -fx-stroke-type: inside ;
    -fx-stroke-line-cap: butt;
}

/**
 * Widget area
 * pseudoclasses: dragged
 */
.area {
    -fx-background-color: -fx-pane-color;
    /*
    default padding for all widgets
    note: widgets should not have their own padding to remain consistent
    */
    -fx-padding: 4 ;
    -fx-background-insets: 2; /* margin, by default set to area-path-border width */

    -fx-border-width: 0.5;
    -fx-border-color: none;
}

.area: active {
    -fx-border-width: 0.5;
    -fx-border-color: -fx-def-font-color;
}

/**
 * Widget area controls. Shown in layout mode. 
 */
.widget-control {
    -fx-background-color: null;
}
/**
 * Container area in layout mode. Inherits .block styleclass.
 */
.container-control {
    -fx-background-color: -fx-pane-color;
}

.area:dragged,
.widget-control:dragged,
.container-control:dragged {
    -fx-background-color: -fx-pane-color-dragged;
}


.freeflowcontainer-window {}
.freeflowcontainer-window >.content {
    -fx-padding: 2.5;
}

/* Control for setting up layout. */
.layouter {}
/** Choosable element inside layouter. Subclasses .block */
.layouter-element {}


/* HBox containing buttons within a header */
.header-buttons {}


/* Small button mostly within custom controls for opening dialogs. For example
   Font picker from within text area. */
.dialog-button {
    /* arrow css used for other components like combo-box */
    -fx-background-color: -fx-def-font-color;
    /* use this to get nice not filled arrow */
    /* -fx-background-color: -fx-mark-highlight-color, -fx-mark-color; */
    -fx-background-insets: 1 0 -1 0, 0;
    -fx-padding: 0.25em 0.3125em 0.25em 0.3125em; /* 3 3.75 3 3.75 */
    -fx-shape: "M 0 0 h 7 l -3.5 4 z";
}

.mini-button {
    -fx-background-color: rgba(255,255,255,0.4);
    -fx-background-radius:7;
    -fx-stroke-width: 1;
    -fx-stroke-color: black;
}

/****** Additional row/cell pseudoclasses for ListView, TableView, TreeView, etc *****
 *
 * dev. note: note that applying pseudoclasses on rows will not affect the cells within them
 * it depends on what attribute is being changed. Pseudoclasses must be
 * set on both row-cell and children cells in the row cell factory.
 *
 * indexed-cell applies to both row-cell and cell, so be aware, that using effects
 * (e.g. shadow) will apply it twice
 */

/* Denotes a currently played record in the playlist or other table. */
.indexed-cell:played,
.indexed-cell:played:selected {
    -fx-text-fill: rgba(180, 200, 240, 0.8);
    -fx-underline: true;
}
.table-row-cell:played,
.table-row-cell:played:selected {
/*    setting text fill here wont work, because text is in cells not rows
    in general set only non-content properties in row*/
}

/* Denotes broken or inconsistent record, e.g. unplayable item on playlist. */
.indexed-cell:corrupt,
.indexed-cell:corrupt:selected {
    -fx-text-fill: rgba(250, 180, 180, 0.8);
}
.table-row-cell:corrupt,
.table-row-cell:corrupt:selected{
/*    setting text fill here wont work, because text is in cells not rows
    in general set only non-content properties in row*/
}

/*
 * Quick search which scrolls to the item in the table can also highlight any
 * while search is active all items have one of the following pseudoclasses
 * matched items.
 */
.indexed-cell:searchmatch,
.indexed-cell:searchmatch:selected {
    /* We leave matched items are normal and instead use of unmatched items style. */
}
/* Unmatched items. */
.indexed-cell:searchmatchnot {
    -fx-opacity: 0.4;
}
.table-row-cell:searchmatchnot {
    -fx-opacity: 1;
}

/******************************** ITEM PICKER **************************************************************************
 * Picker displays elements to choose from as a scrollable tile grid.
 * inherits: ScrollPane, .block
 * Used in layouts (should mirror the style of widget area), but also popups.
 */
.item-picker {
    -fx-padding: 1px
}

.item-picker-element {
    -fx-background-color: -fx-pane-color;
    -fx-background-radius: 0;
    -fx-pref-height: 2em;
}

.item-picker-element:hover {
    -fx-background-color: -fx-pane-color;
    -fx-background-insets: 2;
    -fx-effect: dropshadow(three-pass-box, -fx-pane-color, 2, 0.0, 0, 1);
}
.item-picker-element:empty:hover {
    -fx-background-insets: 0;
}

/********************************* AUTOCOMPLETE POPUP ******************************************************************
 * Auto complete popup displayed when user types and showing available suggestions.
 * Should look like a combobox popup.
 * inherits: .combo-box-popup
 */
.auto-complete-popup > .list-view {}

/********************************* POPOVER *****************************************************************************
 * Custom popup window. Can display arrow pointing to some location and be 'detached'.
 * inherits: Control
 * pseudoclasses : detached - when detached from its location, no arrow
 *                 focused - focus follows focus of the parent window
 */
.popover {}

/*
 * Container for .bgr and .content
 * Rectangular, not in the popover shape. D not use for bgr coloring
 * inherits: StackPane 
 */
.popover-root {
    -fx-background-color: transparent;  /* null causes mouse events pass through transparent parts */
}

/*
 * Bgr - bgr in the shape of the popover. The shape representing the whole popup area including 
 * the arrow. use for basic appearance like border or bgr styling.
 * inherits: Path (which is Shape)
 */
.popover-root > .bgr {
    -fx-fill: -fx-popup-def-bgr-color;
    -fx-text-fill: -fx-def-font-color;
    -fx-stroke: linear-gradient(from 0% 0% to 100% 100%, transparent 0%, -fx-def-font-color 50%, transparent 100%);
                /* -fx-def-font-color; */
    -fx-stroke-width: 1;
    /* radius is not styleable for now and is fixed to programmatic value */
}

/*
 * Content root - rectangular area for the actual content of the popup.
 * Includes header, but not the arrow.
 * inherits: BorderPane
 */
.popover-root > .content {
    -fx-padding: 1em 1.5em 1.5em 1.5em; /* 12 18 18 18 */
}

/* Popover header - rectangular area at the top of the content. */
.popover-root > .content > .popover-header {
    -fx-padding: 0em 0em 1em 0em;   /* 0 0 12 0 */
}

/* Popover header title. */
.popover-root > .content > .popover-header > .title  {
    -fx-font-size: 1.083334em;  /* 13 */
    -fx-font-weight: bold;
    /*
    give title some space, for small popups the control buttons on the right
    easily become invasive when they come close to the title, looks ugly
    */
    -fx-padding: 0 20 0 0;
}

/* note: more general tha popup - already defined above
 HBox containing buttons within a header
.header-buttons {}*/

/* Close button in the header*/
.popover-close-button {
    /* separate the close button from the rest a bit visually*/
    /*-fx-padding: 0 0 0 5;*/ 
}

/* Some usage examples... */
.popover:detached > .popover-root > .bgr {}
.popover:focused > .popover-root > .bgr,
.popover:detached:focused > .popover-root > .bgr {}

/******************************* HELP POPOVER **************************************************************************
 * Help popover, usually associated with a help icon. Acts mostly as a tooltip.
 * Has purely informative use. Provides basically no interaction.
 */
.help-popover {}

/*
 * Text of the help popover
 * inherits: .text
 */
.help-popover-text {
    -fx-text-alignment: justify;
}

/******************************* NOTIFICATION **************************************************************************
 * Application notification popover. Does not style notification content.
 * inherits: .popover
 * radius fixed to 0 programmatically
 */
.notification {}

.notification > .popover-root > .content > .popover-header {}

.notification > .popover-root > .content > .popover-header > .title  {
    -fx-font-weight: bold;
}

/***********************************************************************************************************************
 * Thumbnail.
 */

/* 
 * Root - background for thumbnail. 
 * inherits: .pane
 */
.thumbnail {}

/* 
 * The actual image.
 * inherits: .imageview
 */
.thumbnail-image {}

/*
 * The border of thumbnail 
 * inherits: .pane
 */
.thumbnail-border {
    -fx-border-color: black;
    -fx-border-width: 2;
}


/********************************** BALANCER *****************************************************************************
 * Control for left-right volume balance.
 * inherits: .control
 */
.balancer {}

/********************************** SEEKER *****************************************************************************
 * Control for playback seeking.
 * inherits: .slider
 */

.seeker {
    -fx-skin: "sp.it.pl.gui.objects.seeker.SeekerSkin";
}
.seeker .thumb {}
.seeker .thumb:hover,
.seeker .thumb:pressed {}
.seeker .track {}

/*
 * Chapter marker on the seeker. Marks specific time point.
 * inherits: Rectangle (Shape)
 * pseudoclasses: .newly-created - when user creates new chapter until he writes
 *                                 it to tag
 */
.seeker-marker {
    -fx-background-color: -fx-def-font-color;
    -fx-opacity: 0.5;
    -fx-padding: 4 1 4 1; /* sets height=4, width=2 */
}
.seeker-marker:newly-created {
    -fx-opacity: 1;
}

/* 
 * Add chapter button
 * inherits: .icon
 */
.seeker-add-chapter-button,
.seeker-add-chapter-button:hover {
    /*-fx-fill: blue;*/
    -fx-effect: none;
}

/******************************* VOLUME SLIDER *************************************************************************
 *
 * inherits .slider
 */
.volume {}
.volume .thumb {}
.volume .thumb:hover {}
.volume .track {}

/*********************************** TEXT ******************************************************************************
 * javafx.scene.text.Text does not actually have a style class so this is a custom
 * implementation of that used by a subclass
 */
.text-shape {
    -fx-fill: -fx-def-font-color;
}

/********************************** CONFIG ****************************************************************************/

/** 
 * Text box for configuring objects, e.g. in settings. * 
 * inherits: .text-field
 * pseudoclasses: edited (it is basically focused)
 */
.text-field-config:edited,
.text-field-config:hover:edited,
.text-field-config:focused:edited,
.combobox-field-config:edited > .list-cell,
.combobox-field-config:hover:edited > .list-cell,
.combobox-field-config:focused:edited > .list-cell {
    -fx-text-fill: -fx-focus-color;
    -fx-prompt-text-fill: -fx-prompt-font-color;
}

/** 
 * Ok icon used in config fields to apply change.
 * inherits: .icon
 */
.config-field-ok-button {
    -glyph-name: "FontAwesomeIcon.CHECK";
}

.boolean-config-field {}

.override-config-field {
    -glyph-name: "MaterialDesignIcon.CHECKBOX_MULTIPLE_BLANK_OUTLINE";
}
.override-config-field:selected {
    -glyph-name: "MaterialDesignIcon.CHECKBOX_MULTIPLE_BLANK";
}


.config-shortcut-run-icon {
    -glyph-name: "FontAwesomeIcon.REFRESH";
}
.config-shortcut-global-icon {
    -glyph-name: "MaterialDesignIcon.CAST";
}
.config-shortcut-global-icon:selected {
    -glyph-name: "MaterialDesignIcon.CAST_CONNECTED";
}

/** 
 * Warn icon used in config fields to signal erroneous input.
 * inherits: .icon
 */
.config-field-warn-button {
    -glyph-name: "FontAwesomeIcon.EXCLAMATION_TRIANGLE";
    -fx-fill: -fx-focus-color;
    -fx-effect: dropshadow(gaussian, rgb(130,170,255), 12,0 , 0,0);
}
.config-field-warn-button:hover {
    -fx-fill: -fx-focus-color;
    -fx-scale-x: 1;
    -fx-scale-y: 1;
}

.config-field-default-button {
    -fx-font-size: 0.9em;
    -fx-background-color: transparent;
    -fx-graphic-text-gap: 0px;
    -fx-text-fill: -fx-def-font-color;
    -fx-padding: 2 0 0 0; /* fix vertical alignment*/
}
.config-field-default-button:pressed:hover {
    -fx-effect: innershadow( three-pass-box , rgba(255,255,255,0.7) , 6, 0.0 , 0 , 2 );
}
.config-field-default-button:hover {
    -fx-effect: innershadow( three-pass-box , rgba(255,255,255,0.7) , 6, 0.0 , 0 , 2 );
}

/* Effect type chooser button for effect config field. */
.effect-config-field-type-button {
    -glyph-name: "MaterialDesignIcon.AUTO_FIX";
    -glyph-size: 0.91667em; /* 11 */
}

/* Effect properties button for effect config field. */
.effect-config-field-conf-button {
    -glyph-name: "FontAwesomeIcon.GEAR";
    -glyph-size: 0.91667em; /* 11 */
}

/************************************ SEARCH ***************************************************************************
 * Search control
 * inherits: .text-field
 */

.search {}

/*
 * Search sign icon on on the left of the search
 * inherits: .icon
 */
.search-icon-sign {
    -glyph-name: "FontAwesomeIcon.SEARCH";
    -glyph-size: 0.91667em; /* 11 */
}

/*
 * Search clear button on on the right of the search
 * inherits: .icon
 */
.search-clear-button {
    -glyph-name: "OctIcon.CIRCLE_SLASH";
    -glyph-size: 0.91667em; /* 11 */
}

/************************************ ICON CHOOSER *********************************************************************
 * Search control
 * inherits: .text-field
 */

/**
 * Cell displaying icon. Used in icon browser.
 */
.icon-grid-cell,
.icon-grid-cell:selected {
    -fx-background-color: transparent;
}

/*
 * Icon-info icon showing the icon graphics
 * inherits: .icon
 */
icon-info-icon {
    -glyph-size: 2em; /* 24 */
}


/************************************ RATING ***************************************************************************
 * Rating control displaying number of 'stars'. The number of icons and glyph is customizable.
 */

/* Container for the control, use use for padding and such. */
.rating > .container {
    /* -fx-padding: 0 4 0 4;*/
}

/*
 * .rating-button
 * the stars (although not necessarily stars (not settable in css))), all of the
 * icons are one object due to performance optimizations, so so separate effects
 * on individual icons are impossible
 * should inherit .glyph, but does not due to possible problems
 * 
 * pseudoclasses: min - rating is at min value
 *                max - rating is at max value
 * the 'empty' rating button
 */
.rating-button {
    -fx-fill: -fx-def-font-color;
    -fx-font-size: 10px;
}

.rating-button:empty {
    -fx-opacity: 0.0;
}

.rating-button:min {
    -fx-opacity: 0.4;
}

.rating-button:max {
    -fx-fill: derive(-fx-def-font-color,50%);
}

/*
 * the 'full' rating button - 2nd group of icons with this pseudoclass hovers
 * clipped on top to produce partial rating effect
 */
.rating-button.strong {
    -fx-font-size: 10px;
}


/********************************** SPINNER ****************************************************************************
 * Simple progress indicator control.
 * inherits: .arc, .shape
 */

.spinner {
    -fx-fill: null;
    -fx-stroke: -fx-def-font-color;
    -fx-stroke-line-cap: butt;
    -fx-stroke-width: 0.15em;
    -fx-stroke-type: inside;
}
.spinner-in {
    -fx-pref-width: 0.6em;
    -fx-pref-height: 0.6em;
}
.spinner-out {
    -fx-stroke-width: 0.1em;
    -fx-pref-width: 1em;
    -fx-pref-height: 1em;
}

/********************************** MENU *******************************************************************************
 * Menu item with a check icon
 * inherits: .menu
 * pseudoclasses: no support -> use .menu-nochildren styleclass instead
 */
.checkicon-menu-item {
    
}

/*
 * The icon of checkicon
 * inherits: check-icon
 */
.checkicon-menu-item-icon {
    /* -fx-padding: 0 5 1 0;*/ /* i think padding does not work here*/
    -fx-translate-x: -2;
}
.checkicon-menu-item-icon:selected {
    /* leave default*/
}

/* inherits: checkicon-menu-item-icon */
.checkicon-menu-item-icon-single-selection {
    visibility: hidden;
    -glyph-name: "FontAwesomeIcon.CHECK";
}
.checkicon-menu-item-icon-single-selection:selected {
    visibility: visible;
    -glyph-name: "FontAwesomeIcon.CHECK";
}

/* hide the arrow if no children */
.menu-nochildren > .right-container > .arrow,
.menu-nochildren:focused > .right-container > .arrow {
    -fx-padding: 0;
    -fx-background-color: transparent;
}


/***************************** WIDGET INPUT OUTPUT *********************************************************************
 * Shown in layout mode, a graph displaying widget outputs and inputs as nodes
 * and their bindings as edges.
 */

/*
 * input node icon, output node icon, input/output node icon
 * all three behave the same with same properties, etc.
 * inherits: .icon
 * pseudoclasses: drag-over  - when user's drag&drop hovers on this icon
 */
.inode,
.onode,
.ionode {
    -glyph-name: "FontAwesomeIcon.TOGGLE_RIGHT";
    -glyph-size: 0.833334em; /* 10 */
}

.inode:drag-over,
.onode:drag-over,
.ionode:drag-over {
    -fx-fill: -fx-def-font-color-hover;
    -fx-scale-x: 1.3;
    -fx-scale-y: 1.3;
}

.inode:selected,
.onode:selected,
.ionode:selected {
    -fx-fill: -fx-focus-color;
    -glyph-size: 1.25em; /* 15 */
}


/* 
 * Output -> Input connection line.
 * inherits: .path
 */
.ioline {
    -fx-opacity: 0.8;
    -fx-stroke: -fx-def-font-color;
    -fx-stroke-width: 2;
    -fx-fill: null; /* bgr of the shape the path makes - we do not want any*/
}
.ioline:hover {
    -fx-opacity: 1;
    -fx-stroke: -fx-focus-color;
    -fx-stroke-width: 3;
}
/* .path does not seem to have disabled pseudoclass defined so we do it here */
.ioline:disabled {
    -fx-opacity: 0.4;
}

.ioline-runner {
    -fx-fill: -fx-focus-color;
}


/***************************** OVERLAY PANE *****************************
 * Pane laying 'above' some content creating 'overlay' bgr above it. Used for various things, mostly
 * by subclassing.
 * inherits: .stack-pane
 */
.overlay-pane {
    -fx-background-color: rgba(0,0,0,0.3);
}

/* 
 * Pane for content, does not cover all space, sort of inner box.
 * inherits: .stack-pane
 */
.overlay-pane-content {
    -fx-background-color: rgba(0,20,30,0.1);
    -fx-effect: dropshadow(three-pass-box, black, 10, 0 , 0,0);
    -fx-background-radius: 15;
    -fx-border-color: linear-gradient(from 0% 0% to 100% 100%, transparent 0%, -fx-def-font-color 50%, transparent 100%);
    -fx-border-width: 1;
    /* alternative border style */
    /*-fx-border-color: -fx-def-font-color;
     -fx-border-width: 0.5; */
    -fx-border-radius: 15;
    -fx-padding: 20;
}

/*************************** ACTION PANE *******************************
 * Action chooser, displays action icons (with description) to choose 
 * from and action input data information
 * inherits: .overlay-pane
 */
.action-pane {}

/*
 * Icon for action in an action pane
 * inherits: .icon
 */
.action-pane-action-icon {
    -glyph-size: 2em; /* 24 */
}

/*************************** SHORTCUT PANE *******************************
 * Overlay pane displaying shortcuts and their keys
 * inherits: .overlay-pane
 */
.shortcut-pane{
    -fx-padding: 10em;
}

/*
 * Group title label for shortcut group
 * inherits: .label
 */
.shortcut-pane-group-label {
    -fx-font-weight: bold;
}

/*************************** SHORTCUT PANE *******************************
 * Overlay displaying system properties
 * inherits: .overlay-pane
 */
.info-pane{
    -fx-padding: 10em;
}

/*
 * Group title label for shortcut group
 * inherits: .label
 */
.info-pane-group-label {
    -fx-font-weight: bold;
}
    
/******************** INSPECTING ***********************************
 * A 'selected' node.
 */
.inspector-highlighted,
.inspector-highlighted:hover,
.inspector-highlighted:selected,
.inspector-highlighted:odd,
.inspector-highlighted:even,
.inspector-highlighted:focused {
    -fx-background-color: rgba(90,200,200,0.2);
}

/******************** PLACEHOLDER PANE *********************
 * Pane with a placeholder, mostly showed instead of content when there is none (e.g. click to 
 * add items).
 * Normally it highlights on hover/mouse over to signal possible interaction.
 *
 * inherits: .stack-pane
 */
.placeholder-pane {}
.placeholder-pane:hover {
    -fx-background-color: rgba(0,0,0,0.5); 
}

/*
 * Icon denoting an action that will take place after drag is dropped
 * inherits: .icon
 */
.placeholder-pane-icon {
    -glyph-size: 2em; /* 24 */
}

/******************** DRAG PANE *********************
 * Drag highlighting pane, visible when drag enters node and hidden when it exists.
 * Normally it is always highlighted, but only visible on drag over.
 *
 * inherits: .placeholder-pane
 */
.drag-pane {
    -fx-background-color: rgba(0,0,0,0.5); 
}

/*
 * Icon denoting an action that will take place after drag is dropped
 * inherits: .placeholder-pane-icon
 */
.drag-pane-icon {}

/***************************** GUIDE *****************************
 * Guide
 */

/*
 * Standard text of the guide
 * inherits: .text
 */
.guide-text {
    -fx-font-weight: bold;
}

/***************************** GRID VIEW *****************************
 * Virtualized control displaying 2D matrix of cells. Think of it as 2D ListView.
 * Contains rows and each rows individual cells.
 */
.grid-view {
    -fx-border-width: 0;
    -fx-padding: 0;
}

/**
 * Cell in a grid view.
 * inherits: .indexed-cell
 * pseudoclasses: selected - when any cell in the row is selected
 */
.grid-row {
    -fx-border-width: 0;
    -fx-padding: 0;
}

/**
 * Cell in a grid view row.
 * inherits: .indexed-cell
 * pseudoclasses: selected, searchmatch, searchmatchnot
 */
.grid-cell {
    -fx-border-width: 0;
    -fx-padding: 0;
    -fx-background-color: rgba(0,0,0,0.2);
}

.grid-cell:selected {
    -fx-background-insets: -2;
    -fx-background-color: rgba(0,0,0,0.4);
    -fx-padding: -2;
}

/*
 * Quick search which scrolls to the item in the table can also highlight any
 * while search is active all items have one of the following pseudoclasses
 * matched items.
 */
.grid-cell:searchmatch,
.grid-cell:searchmatch:selected {
    /* We leave matched items are normal and instead use of unmatched items style. */
}

/* Unmatched items. */
.grid-cell:searchmatchnot {
    -fx-opacity: 0.4;
}

/***************************** FONT PICKER DIALOG *****************************
 * Font picker dialog
 * inherits: .dialog
 */
.font-selector-dialog {}
.font-selector-dialog.dialog-pane {}