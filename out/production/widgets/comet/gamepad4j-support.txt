Gamepad4j library uses native resources to poll the gamepad devices' state. These resources vary depending on whether the system is 32-bit or 64-bit. Unfortunately, the library is made in a way that requires the JVM version (32-bit vs 64-bit) be the same as the underlaying system (OS). In other words if the system is 64-bit, JVM (i.e., java) must also be 64-bit. If the versions do not match, the library will fail to load these native resources and the game will disable gamepad support.

The problem for standalone application (application with jvm packaged within) is obvious: unless the application detects the user system version and packages both JVMs and uses the correct version, user will have to run appropriate system instead. Fortunately 64-bit systems are pretty much standard nowadays (2016) so it is possible to get by with just single JVM, the 64-bit one. However, if there comes up a situation, where 32-bit JVM is required (e.g., by some library), the situation becomes desperate.