package sp.it.util.file.type

import sp.it.util.conf.UnsealedEnumerator
import sp.it.util.functional.Try
import sp.it.util.functional.asIf
import sp.it.util.functional.net
import sp.it.util.parsing.ConverterString
import sp.it.util.type.ConstantReadOnlyPropertyDelegateProvider

/**
 * Represents a mimetype.
 *
 * See more at:
 *  * http://stackoverflow.com/questions/51438/getting-a-files-mime-type-in-java
 *  * http://stackoverflow.com/questions/7904497/is-there-an-enum-with-mime-types-in-java
 *  * http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/net/MediaType.html
 */
class MimeType(val name: String, vararg extensions: String) {
   val group: String = name.substringBefore("/")
   val extensions: Array<out String> = extensions
   val extension: String? = extensions.firstOrNull()

   fun getMimeType() = name

   fun hasExtension(extension: String) = extension in extensions

   override fun toString() = name

   override fun equals(other: Any?) = this===other || other.asIf<MimeType>()?.name == name

   override fun hashCode() = name.hashCode()

   @Suppress("NonAsciiCharacters", "ObjectPropertyName", "SpellCheckingInspection", "RemoveRedundantBackticks")
   companion object: ConverterString<MimeType>, UnsealedEnumerator<MimeType> {

      override fun toS(o: MimeType): String = o.name
      override fun ofS(s: String) = MimeTypes.ofType(s)?.net { Try.ok(it) } ?: Try.error("'$s' is not recognized mime type")
      override fun enumerateUnsealed() = MimeTypes.setOfMimeTypes()

      private fun mime(vararg mimeExtension: String) = ConstantReadOnlyPropertyDelegateProvider<Any?, MimeType> { _, property ->
         MimeType(property.name.replace("∕", "/").replace("·", "."), *mimeExtension).also(MimeTypes::register)
      }

      val `unknown` = MimeType("spit-player/unknown")
      val `application∕andrew-inset`: MimeType by mime("ez")
      val `application∕applixware`: MimeType by mime("aw")
      val `application∕atom+xml`: MimeType by mime("atom")
      val `application∕atomcat+xml`: MimeType by mime("atomcat")
      val `application∕atomsvc+xml`: MimeType by mime("atomsvc")
      val `application∕ccxml+xml`: MimeType by mime("ccxml")
      val `application∕cdmi-capability`: MimeType by mime("cdmia")
      val `application∕cdmi-container`: MimeType by mime("cdmic")
      val `application∕cdmi-domain`: MimeType by mime("cdmid")
      val `application∕cdmi-object`: MimeType by mime("cdmio")
      val `application∕cdmi-queue`: MimeType by mime("cdmiq")
      val `application∕cu-seeme`: MimeType by mime("cu")
      val `application∕davmount+xml`: MimeType by mime("davmount")
      val `application∕docbook+xml`: MimeType by mime("dbk")
      val `application∕dssc+der`: MimeType by mime("dssc")
      val `application∕dssc+xml`: MimeType by mime("xdssc")
      val `application∕ecmascript`: MimeType by mime("ecma")
      val `application∕emma+xml`: MimeType by mime("emma")
      val `application∕epub+zip`: MimeType by mime("epub")
      val `application∕exi`: MimeType by mime("exi")
      val `application∕font-tdpfr`: MimeType by mime("pfr")
      val `application∕gml+xml`: MimeType by mime("gml")
      val `application∕gpx+xml`: MimeType by mime("gpx")
      val `application∕gxf`: MimeType by mime("gxf")
      val `application∕hyperstudio`: MimeType by mime("stk")
      val `application∕inkml+xml`: MimeType by mime("ink", "inkml")
      val `application∕ipfix`: MimeType by mime("ipfix")
      val `application∕java-archive`: MimeType by mime("jar")
      val `application∕java-serialized-object`: MimeType by mime("ser")
      val `application∕java-vm`: MimeType by mime("class")
      val `application∕javascript`: MimeType by mime("js")
      val `application∕json`: MimeType by mime("json")
      val `application∕jsonml+json`: MimeType by mime("jsonml")
      val `application∕lost+xml`: MimeType by mime("lostxml")
      val `application∕x-krita`: MimeType by mime("kra")
      val `application∕mac-binhex40`: MimeType by mime("hqx")
      val `application∕mac-compactpro`: MimeType by mime("cpt")
      val `application∕mads+xml`: MimeType by mime("mads")
      val `application∕marc`: MimeType by mime("mrc")
      val `application∕marcxml+xml`: MimeType by mime("mrcx")
      val `application∕mathematica`: MimeType by mime("ma", "nb", "mb")
      val `application∕mathml+xml`: MimeType by mime("mathml")
      val `application∕mbox`: MimeType by mime("mbox")
      val `application∕mediaservercontrol+xml`: MimeType by mime("mscml")
      val `application∕metalink+xml`: MimeType by mime("metalink")
      val `application∕metalink4+xml`: MimeType by mime("meta4")
      val `application∕mets+xml`: MimeType by mime("mets")
      val `application∕mods+xml`: MimeType by mime("mods")
      val `application∕mp21`: MimeType by mime("m21", "mp21")
      val `application∕mp4`: MimeType by mime("mp4s")
      val `application∕mpegurl`: MimeType by mime("m3u", "m3u8")
      val `application∕msword`: MimeType by mime("doc", "dot")
      val `application∕mxf`: MimeType by mime("mxf")
      val `application∕octet-stream`: MimeType by mime("bin", "dms", "lrf", "mar", "so", "dist", "distz", "pkg", "bpk", "dump", "elc", "deploy")
      val `application∕oda`: MimeType by mime("oda")
      val `application∕oebps-package+xml`: MimeType by mime("opf")
      val `application∕ogg`: MimeType by mime("ogx")
      val `application∕omdoc+xml`: MimeType by mime("omdoc")
      val `application∕onenote`: MimeType by mime("onetoc", "onetoc2", "onetmp", "onepkg")
      val `application∕oxps`: MimeType by mime("oxps")
      val `application∕patch-ops-error+xml`: MimeType by mime("xer")
      val `application∕pdf`: MimeType by mime("pdf")
      val `application∕pgp-encrypted`: MimeType by mime("pgp")
      val `application∕pgp-signature`: MimeType by mime("asc", "sig")
      val `application∕pics-rules`: MimeType by mime("prf")
      val `application∕pkcs10`: MimeType by mime("p10")
      val `application∕pkcs7-mime`: MimeType by mime("p7m", "p7c")
      val `application∕pkcs7-signature`: MimeType by mime("p7s")
      val `application∕pkcs8`: MimeType by mime("p8")
      val `application∕pkix-attr-cert`: MimeType by mime("ac")
      val `application∕pkix-cert`: MimeType by mime("cer")
      val `application∕pkix-crl`: MimeType by mime("crl")
      val `application∕pkix-pkipath`: MimeType by mime("pkipath")
      val `application∕pkixcmp`: MimeType by mime("pki")
      val `application∕pls+xml`: MimeType by mime("pls")
      val `application∕postscript`: MimeType by mime("ai", "eps", "ps")
      val `application∕prs·cww`: MimeType by mime("cww")
      val `application∕pskc+xml`: MimeType by mime("pskcxml")
      val `application∕rdf+xml`: MimeType by mime("rdf")
      val `application∕reginfo+xml`: MimeType by mime("rif")
      val `application∕relax-ng-compact-syntax`: MimeType by mime("rnc")
      val `application∕resource-lists+xml`: MimeType by mime("rl")
      val `application∕resource-lists-diff+xml`: MimeType by mime("rld")
      val `application∕rls-services+xml`: MimeType by mime("rs")
      val `application∕rpki-ghostbusters`: MimeType by mime("gbr")
      val `application∕rpki-manifest`: MimeType by mime("mft")
      val `application∕rpki-roa`: MimeType by mime("roa")
      val `application∕rsd+xml`: MimeType by mime("rsd")
      val `application∕rss+xml`: MimeType by mime("rss")
      val `application∕rtf`: MimeType by mime("rtf")
      val `application∕sbml+xml`: MimeType by mime("sbml")
      val `application∕scvp-cv-request`: MimeType by mime("scq")
      val `application∕scvp-cv-response`: MimeType by mime("scs")
      val `application∕scvp-vp-request`: MimeType by mime("spq")
      val `application∕scvp-vp-response`: MimeType by mime("spp")
      val `application∕sdp`: MimeType by mime("sdp")
      val `application∕set-payment-initiation`: MimeType by mime("setpay")
      val `application∕set-registration-initiation`: MimeType by mime("setreg")
      val `application∕shf+xml`: MimeType by mime("shf")
      val `application∕smil+xml`: MimeType by mime("smi", "smil")
      val `application∕sparql-query`: MimeType by mime("rq")
      val `application∕sparql-results+xml`: MimeType by mime("srx")
      val `application∕srgs`: MimeType by mime("gram")
      val `application∕srgs+xml`: MimeType by mime("grxml")
      val `application∕sru+xml`: MimeType by mime("sru")
      val `application∕ssdl+xml`: MimeType by mime("ssdl")
      val `application∕ssml+xml`: MimeType by mime("ssml")
      val `application∕tei+xml`: MimeType by mime("tei", "teicorpus")
      val `application∕thraud+xml`: MimeType by mime("tfi")
      val `application∕timestamped-data`: MimeType by mime("tsd")
      val `application∕vnd·3gpp·pic-bw-large`: MimeType by mime("plb")
      val `application∕vnd·3gpp·pic-bw-small`: MimeType by mime("psb")
      val `application∕vnd·3gpp·pic-bw-var`: MimeType by mime("pvb")
      val `application∕vnd·3gpp2·tcap`: MimeType by mime("tcap")
      val `application∕vnd·3m·post-it-notes`: MimeType by mime("pwn")
      val `application∕vnd·accpac·simply·aso`: MimeType by mime("aso")
      val `application∕vnd·accpac·simply·imp`: MimeType by mime("imp")
      val `application∕vnd·acucobol`: MimeType by mime("acu")
      val `application∕vnd·acucorp`: MimeType by mime("atc", "acutc")
      val `application∕vnd·adobe·air-application-installer-package+zip`: MimeType by mime("air")
      val `application∕vnd·adobe·formscentral·fcdt`: MimeType by mime("fcdt")
      val `application∕vnd·adobe·fxp`: MimeType by mime("fxp", "fxpl")
      val `application∕vnd·adobe·xdp+xml`: MimeType by mime("xdp")
      val `application∕vnd·adobe·xfdf`: MimeType by mime("xfdf")
      val `application∕vnd·ahead·space`: MimeType by mime("ahead")
      val `application∕vnd·airzip·filesecure·azf`: MimeType by mime("azf")
      val `application∕vnd·airzip·filesecure·azs`: MimeType by mime("azs")
      val `application∕vnd·amazon·ebook`: MimeType by mime("azw")
      val `application∕vnd·americandynamics·acc`: MimeType by mime("acc")
      val `application∕vnd·amiga·ami`: MimeType by mime("ami")
      val `application∕vnd·android·package-archive`: MimeType by mime("apk")
      val `application∕vnd·anser-web-certificate-issue-initiation`: MimeType by mime("cii")
      val `application∕vnd·anser-web-funds-transfer-initiation`: MimeType by mime("fti")
      val `application∕vnd·antix·game-component`: MimeType by mime("atx")
      val `application∕vnd·apple·installer+xml`: MimeType by mime("mpkg")
      val `application∕vnd·apple·mpegurl`: MimeType = `application∕mpegurl`
      val `application∕vnd·apple·mpegurl·audio`: MimeType = `application∕mpegurl`
      val `application∕vnd·aristanetworks·swi`: MimeType by mime("swi")
      val `application∕vnd·astraea-software·iota`: MimeType by mime("iota")
      val `application∕vnd·audiograph`: MimeType by mime("aep")
      val `application∕vnd·blueice·multipass`: MimeType by mime("mpm")
      val `application∕vnd·bmi`: MimeType by mime("bmi")
      val `application∕vnd·businessobjects`: MimeType by mime("rep")
      val `application∕vnd·chemdraw+xml`: MimeType by mime("cdxml")
      val `application∕vnd·chipnuts·karaoke-mmd`: MimeType by mime("mmd")
      val `application∕vnd·cinderella`: MimeType by mime("cdy")
      val `application∕vnd·claymore`: MimeType by mime("cla")
      val `application∕vnd·cloanto·rp9`: MimeType by mime("rp9")
      val `application∕vnd·clonk·c4group`: MimeType by mime("c4g", "c4d", "c4f", "c4p", "c4u")
      val `application∕vnd·cluetrust·cartomobile-config`: MimeType by mime("c11amc")
      val `application∕vnd·cluetrust·cartomobile-config-pkg`: MimeType by mime("c11amz")
      val `application∕vnd·commonspace`: MimeType by mime("csp")
      val `application∕vnd·contact·cmsg`: MimeType by mime("cdbcmsg")
      val `application∕vnd·cosmocaller`: MimeType by mime("cmc")
      val `application∕vnd·crick·clicker`: MimeType by mime("clkx")
      val `application∕vnd·crick·clicker·keyboard`: MimeType by mime("clkk")
      val `application∕vnd·crick·clicker·palette`: MimeType by mime("clkp")
      val `application∕vnd·crick·clicker·template`: MimeType by mime("clkt")
      val `application∕vnd·crick·clicker·wordbank`: MimeType by mime("clkw")
      val `application∕vnd·criticaltools·wbs+xml`: MimeType by mime("wbs")
      val `application∕vnd·ctc-posml`: MimeType by mime("pml")
      val `application∕vnd·cups-ppd`: MimeType by mime("ppd")
      val `application∕vnd·curl·car`: MimeType by mime("car")
      val `application∕vnd·curl·pcurl`: MimeType by mime("pcurl")
      val `application∕vnd·dart`: MimeType by mime("dart")
      val `application∕vnd·data-vision·rdz`: MimeType by mime("rdz")
      val `application∕vnd·dece·data`: MimeType by mime("uvf", "uvvf", "uvd", "uvvd")
      val `application∕vnd·dece·ttml+xml`: MimeType by mime("uvt", "uvvt")
      val `application∕vnd·dece·unspecified`: MimeType by mime("uvx", "uvvx")
      val `application∕vnd·dece·zip`: MimeType by mime("uvz", "uvvz")
      val `application∕vnd·denovo·fcselayout-link`: MimeType by mime("fe∕launch")
      val `application∕vnd·dna`: MimeType by mime("dna")
      val `application∕vnd·dolby·mlp`: MimeType by mime("mlp")
      val `application∕vnd·dpgraph`: MimeType by mime("dpg")
      val `application∕vnd·dreamfactory`: MimeType by mime("dfac")
      val `application∕vnd·ds-keypoint`: MimeType by mime("kpxx")
      val `application∕vnd·dvb·ait`: MimeType by mime("ait")
      val `application∕vnd·dvb·service`: MimeType by mime("svc")
      val `application∕vnd·dynageo`: MimeType by mime("geo")
      val `application∕vnd·ecowin·chart`: MimeType by mime("mag")
      val `application∕vnd·enliven`: MimeType by mime("nml")
      val `application∕vnd·epson·esf`: MimeType by mime("esf")
      val `application∕vnd·epson·msf`: MimeType by mime("msf")
      val `application∕vnd·epson·quickanime`: MimeType by mime("qam")
      val `application∕vnd·epson·salt`: MimeType by mime("slt")
      val `application∕vnd·epson·ssf`: MimeType by mime("ssf")
      val `application∕vnd·eszigno3+xml`: MimeType by mime("es3", "et3")
      val `application∕vnd·ezpix-album`: MimeType by mime("ez2")
      val `application∕vnd·ezpix-package`: MimeType by mime("ez3")
      val `application∕vnd·fdf`: MimeType by mime("fdf")
      val `application∕vnd·fdsn·mseed`: MimeType by mime("mseed")
      val `application∕vnd·fdsn·seed`: MimeType by mime("seed", "dataless")
      val `application∕vnd·flographit`: MimeType by mime("gph")
      val `application∕vnd·fluxtime·clip`: MimeType by mime("ftc")
      val `application∕vnd·framemaker`: MimeType by mime("fm", "frame", "maker", "book")
      val `application∕vnd·frogans·fnc`: MimeType by mime("fnc")
      val `application∕vnd·frogans·ltf`: MimeType by mime("ltf")
      val `application∕vnd·fsc·weblaunch`: MimeType by mime("fsc")
      val `application∕vnd·fujitsu·oasys`: MimeType by mime("oas")
      val `application∕vnd·fujitsu·oasys2`: MimeType by mime("oa2")
      val `application∕vnd·fujitsu·oasys3`: MimeType by mime("oa3")
      val `application∕vnd·fujitsu·oasysgp`: MimeType by mime("fg5")
      val `application∕vnd·fujitsu·oasysprs`: MimeType by mime("bh2")
      val `application∕vnd·fujixerox·ddd`: MimeType by mime("ddd")
      val `application∕vnd·fujixerox·docuworks`: MimeType by mime("xdw")
      val `application∕vnd·fujixerox·docuworks·binder`: MimeType by mime("xbd")
      val `application∕vnd·fuzzysheet`: MimeType by mime("fzs")
      val `application∕vnd·genomatix·tuxedo`: MimeType by mime("txd")
      val `application∕vnd·geogebra·file`: MimeType by mime("ggb")
      val `application∕vnd·geogebra·tool`: MimeType by mime("ggt")
      val `application∕vnd·geometry-explorer`: MimeType by mime("gex", "gre")
      val `application∕vnd·geonext`: MimeType by mime("gxt")
      val `application∕vnd·geoplan`: MimeType by mime("g2w")
      val `application∕vnd·geospace`: MimeType by mime("g3w")
      val `application∕vnd·gmx`: MimeType by mime("gmx")
      val `application∕vnd·google-earth·kml+xml`: MimeType by mime("kml")
      val `application∕vnd·google-earth·kmz`: MimeType by mime("kmz")
      val `application∕vnd·grafeq`: MimeType by mime("gqf", "gqs")
      val `application∕vnd·groove-account`: MimeType by mime("gac")
      val `application∕vnd·groove-help`: MimeType by mime("ghf")
      val `application∕vnd·groove-identity-message`: MimeType by mime("gim")
      val `application∕vnd·groove-injector`: MimeType by mime("grv")
      val `application∕vnd·groove-tool-message`: MimeType by mime("gtm")
      val `application∕vnd·groove-tool-template`: MimeType by mime("tpl")
      val `application∕vnd·groove-vcard`: MimeType by mime("vcg")
      val `application∕vnd·hal+xml`: MimeType by mime("hal")
      val `application∕vnd·handheld-entertainment+xml`: MimeType by mime("zmm")
      val `application∕vnd·hbci`: MimeType by mime("hbci")
      val `application∕vnd·hhe·lesson-player`: MimeType by mime("les")
      val `application∕vnd·hp-hpgl`: MimeType by mime("hpgl")
      val `application∕vnd·hp-hpid`: MimeType by mime("hpid")
      val `application∕vnd·hp-hps`: MimeType by mime("hps")
      val `application∕vnd·hp-jlyt`: MimeType by mime("jlt")
      val `application∕vnd·hp-pcl`: MimeType by mime("pcl")
      val `application∕vnd·hp-pclxl`: MimeType by mime("pclxl")
      val `application∕vnd·hydrostatix·sof-data`: MimeType by mime("sfd-hdstx")
      val `application∕vnd·ibm·minipay`: MimeType by mime("mpy")
      val `application∕vnd·ibm·modcap`: MimeType by mime("afp", "listafp", "list3820")
      val `application∕vnd·ibm·rights-management`: MimeType by mime("irm")
      val `application∕vnd·ibm·secure-container`: MimeType by mime("sc")
      val `application∕vnd·iccprofile`: MimeType by mime("icc", "icm")
      val `application∕vnd·igloader`: MimeType by mime("igl")
      val `application∕vnd·immervision-ivp`: MimeType by mime("ivp")
      val `application∕vnd·immervision-ivu`: MimeType by mime("ivu")
      val `application∕vnd·insors·igm`: MimeType by mime("igm")
      val `application∕vnd·intercon·formnet`: MimeType by mime("xpw", "xpx")
      val `application∕vnd·intergeo`: MimeType by mime("i2g")
      val `application∕vnd·intu·qbo`: MimeType by mime("qbo")
      val `application∕vnd·intu·qfx`: MimeType by mime("qfx")
      val `application∕vnd·ipunplugged·rcprofile`: MimeType by mime("rcprofile")
      val `application∕vnd·irepository·package+xml`: MimeType by mime("irp")
      val `application∕vnd·is-xpr`: MimeType by mime("xpr")
      val `application∕vnd·isac·fcs`: MimeType by mime("fcs")
      val `application∕vnd·jam`: MimeType by mime("jam")
      val `application∕vnd·jcp·javame·midlet-rms`: MimeType by mime("rms")
      val `application∕vnd·jisp`: MimeType by mime("jisp")
      val `application∕vnd·joost·joda-archive`: MimeType by mime("joda")
      val `application∕vnd·kahootz`: MimeType by mime("ktz", "ktr")
      val `application∕vnd·kde·karbon`: MimeType by mime("karbon")
      val `application∕vnd·kde·kchart`: MimeType by mime("chrt")
      val `application∕vnd·kde·kformula`: MimeType by mime("kfo")
      val `application∕vnd·kde·kivio`: MimeType by mime("flw")
      val `application∕vnd·kde·kontour`: MimeType by mime("kon")
      val `application∕vnd·kde·kpresenter`: MimeType by mime("kpr", "kpt")
      val `application∕vnd·kde·kspread`: MimeType by mime("ksp")
      val `application∕vnd·kde·kword`: MimeType by mime("kwd", "kwt")
      val `application∕vnd·kenameaapp`: MimeType by mime("htke")
      val `application∕vnd·kidspiration`: MimeType by mime("kia")
      val `application∕vnd·kinar`: MimeType by mime("kne", "knp")
      val `application∕vnd·koan`: MimeType by mime("skp", "skd", "skt", "skm")
      val `application∕vnd·kodak-descriptor`: MimeType by mime("sse")
      val `application∕vnd·las·las+xml`: MimeType by mime("lasxml")
      val `application∕vnd·llamagraphics·life-balance·desktop`: MimeType by mime("lbd")
      val `application∕vnd·llamagraphics·life-balance·exchange+xml`: MimeType by mime("lbe")
      val `application∕vnd·lotus-1-2-3`: MimeType by mime("123")
      val `application∕vnd·lotus-approach`: MimeType by mime("apr")
      val `application∕vnd·lotus-freelance`: MimeType by mime("pre")
      val `application∕vnd·lotus-notes`: MimeType by mime("nsf")
      val `application∕vnd·lotus-organizer`: MimeType by mime("org")
      val `application∕vnd·lotus-screencam`: MimeType by mime("scm")
      val `application∕vnd·lotus-wordpro`: MimeType by mime("lwp")
      val `application∕vnd·macports·portpkg`: MimeType by mime("portpkg")
      val `application∕vnd·mcd`: MimeType by mime("mcd")
      val `application∕vnd·medcalcdata`: MimeType by mime("mc1")
      val `application∕vnd·mediastation·cdkey`: MimeType by mime("cdkey")
      val `application∕vnd·mfer`: MimeType by mime("mwf")
      val `application∕vnd·mfmp`: MimeType by mime("mfm")
      val `application∕vnd·micrografx·flo`: MimeType by mime("flo")
      val `application∕vnd·micrografx·igx`: MimeType by mime("igx")
      val `application∕vnd·mif`: MimeType by mime("mif")
      val `application∕vnd·mobius·daf`: MimeType by mime("daf")
      val `application∕vnd·mobius·dis`: MimeType by mime("dis")
      val `application∕vnd·mobius·mbk`: MimeType by mime("mbk")
      val `application∕vnd·mobius·mqy`: MimeType by mime("mqy")
      val `application∕vnd·mobius·msl`: MimeType by mime("msl")
      val `application∕vnd·mobius·plc`: MimeType by mime("plc")
      val `application∕vnd·mobius·txf`: MimeType by mime("txf")
      val `application∕vnd·mophun·application`: MimeType by mime("mpn")
      val `application∕vnd·mophun·certificate`: MimeType by mime("mpc")
      val `application∕vnd·mozilla·xul+xml`: MimeType by mime("xul")
      val `application∕vnd·ms-artgalry`: MimeType by mime("cil")
      val `application∕vnd·ms-cab-compressed`: MimeType by mime("cab")
      val `application∕vnd·ms-excel`: MimeType by mime("xls", "xlm", "xla", "xlc", "xlt", "xlw")
      val `application∕vnd·ms-excel·addin·macroenabled·12`: MimeType by mime("xlam")
      val `application∕vnd·ms-excel·sheet·binary·macroenabled·12`: MimeType by mime("xlsb")
      val `application∕vnd·ms-excel·sheet·macroenabled·12`: MimeType by mime("xlsm")
      val `application∕vnd·ms-excel·template·macroenabled·12`: MimeType by mime("xltm")
      val `application∕vnd·ms-fontobject`: MimeType by mime("eot")
      val `application∕vnd·ms-htmlhelp`: MimeType by mime("chm")
      val `application∕vnd·ms-ims`: MimeType by mime("ims")
      val `application∕vnd·ms-lrm`: MimeType by mime("lrm")
      val `application∕vnd·ms-officetheme`: MimeType by mime("thmx")
      val `application∕vnd·ms-pki·seccat`: MimeType by mime("cat")
      val `application∕vnd·ms-pki·stl`: MimeType by mime("stl")
      val `application∕vnd·ms-powerpoint`: MimeType by mime("ppt", "pps", "pot")
      val `application∕vnd·ms-powerpoint·addin·macroenabled·12`: MimeType by mime("ppam")
      val `application∕vnd·ms-powerpoint·presentation·macroenabled·12`: MimeType by mime("pptm")
      val `application∕vnd·ms-powerpoint·slide·macroenabled·12`: MimeType by mime("sldm")
      val `application∕vnd·ms-powerpoint·slideshow·macroenabled·12`: MimeType by mime("ppsm")
      val `application∕vnd·ms-powerpoint·template·macroenabled·12`: MimeType by mime("potm")
      val `application∕vnd·ms-project`: MimeType by mime("mpp", "mpt")
      val `application∕vnd·ms-word·document·macroenabled·12`: MimeType by mime("docm")
      val `application∕vnd·ms-word·template·macroenabled·12`: MimeType by mime("dotm")
      val `application∕vnd·ms-works`: MimeType by mime("wps", "wks", "wcm", "wdb")
      val `application∕vnd·ms-wpl`: MimeType by mime("wpl")
      val `application∕vnd·ms-xpsdocument`: MimeType by mime("xps")
      val `application∕vnd·mseq`: MimeType by mime("mseq")
      val `application∕vnd·musician`: MimeType by mime("mus")
      val `application∕vnd·muvee·style`: MimeType by mime("msty")
      val `application∕vnd·mynfc`: MimeType by mime("taglet")
      val `application∕vnd·neurolanguage·nlu`: MimeType by mime("nlu")
      val `application∕vnd·nitf`: MimeType by mime("ntf", "nitf")
      val `application∕vnd·noblenet-directory`: MimeType by mime("nnd")
      val `application∕vnd·noblenet-sealer`: MimeType by mime("nns")
      val `application∕vnd·noblenet-web`: MimeType by mime("nnw")
      val `application∕vnd·nokia·n-gage·data`: MimeType by mime("ngdat")
      val `application∕vnd·nokia·n-gage·symbian·install`: MimeType by mime("n-gage")
      val `application∕vnd·nokia·radio-preset`: MimeType by mime("rpst")
      val `application∕vnd·nokia·radio-presets`: MimeType by mime("rpss")
      val `application∕vnd·novadigm·edm`: MimeType by mime("edm")
      val `application∕vnd·novadigm·edx`: MimeType by mime("edx")
      val `application∕vnd·novadigm·ext`: MimeType by mime("ext")
      val `application∕vnd·oasis·opendocument·chart`: MimeType by mime("odc")
      val `application∕vnd·oasis·opendocument·chart-template`: MimeType by mime("otc")
      val `application∕vnd·oasis·opendocument·database`: MimeType by mime("odb")
      val `application∕vnd·oasis·opendocument·formula`: MimeType by mime("odf")
      val `application∕vnd·oasis·opendocument·formula-template`: MimeType by mime("odft")
      val `application∕vnd·oasis·opendocument·graphics`: MimeType by mime("odg")
      val `application∕vnd·oasis·opendocument·graphics-template`: MimeType by mime("otg")
      val `application∕vnd·oasis·opendocument·image`: MimeType by mime("odi")
      val `application∕vnd·oasis·opendocument·image-template`: MimeType by mime("oti")
      val `application∕vnd·oasis·opendocument·presentation`: MimeType by mime("odp")
      val `application∕vnd·oasis·opendocument·presentation-template`: MimeType by mime("otp")
      val `application∕vnd·oasis·opendocument·spreadsheet`: MimeType by mime("ods")
      val `application∕vnd·oasis·opendocument·spreadsheet-template`: MimeType by mime("ots")
      val `application∕vnd·oasis·opendocument·text`: MimeType by mime("odt")
      val `application∕vnd·oasis·opendocument·text-master`: MimeType by mime("odm")
      val `application∕vnd·oasis·opendocument·text-template`: MimeType by mime("ott")
      val `application∕vnd·oasis·opendocument·text-web`: MimeType by mime("oth")
      val `application∕vnd·olpc-sugar`: MimeType by mime("xo")
      val `application∕vnd·oma·dd2+xml`: MimeType by mime("dd2")
      val `application∕vnd·openofficeorg·extension`: MimeType by mime("oxt")
      val `application∕vnd·openxmlformats-officedocument·presentationml·presentation`: MimeType by mime("pptx")
      val `application∕vnd·openxmlformats-officedocument·presentationml·slide`: MimeType by mime("sldx")
      val `application∕vnd·openxmlformats-officedocument·presentationml·slideshow`: MimeType by mime("ppsx")
      val `application∕vnd·openxmlformats-officedocument·presentationml·template`: MimeType by mime("potx")
      val `application∕vnd·openxmlformats-officedocument·spreadsheetml·sheet`: MimeType by mime("xlsx")
      val `application∕vnd·openxmlformats-officedocument·spreadsheetml·template`: MimeType by mime("xltx")
      val `application∕vnd·openxmlformats-officedocument·wordprocessingml·document`: MimeType by mime("docx")
      val `application∕vnd·openxmlformats-officedocument·wordprocessingml·template`: MimeType by mime("dotx")
      val `application∕vnd·osgeo·mapguide·package`: MimeType by mime("mgp")
      val `application∕vnd·osgi·dp`: MimeType by mime("dp")
      val `application∕vnd·osgi·subsystem`: MimeType by mime("esa")
      val `application∕vnd·palm`: MimeType by mime("pdb", "pqa", "oprc")
      val `application∕vnd·pawaafile`: MimeType by mime("paw")
      val `application∕vnd·pg·format`: MimeType by mime("str")
      val `application∕vnd·pg·osasli`: MimeType by mime("ei6")
      val `application∕vnd·picsel`: MimeType by mime("efif")
      val `application∕vnd·pmi·widget`: MimeType by mime("wg")
      val `application∕vnd·pocketlearn`: MimeType by mime("plf")
      val `application∕vnd·powerbuilder6`: MimeType by mime("pbd")
      val `application∕vnd·previewsystems·box`: MimeType by mime("box")
      val `application∕vnd·proteus·magazine`: MimeType by mime("mgz")
      val `application∕vnd·publishare-delta-tree`: MimeType by mime("qps")
      val `application∕vnd·pvi·ptid1`: MimeType by mime("ptid")
      val `application∕vnd·quark·quarkxpress`: MimeType by mime("qxd", "qxt", "qwd", "qwt", "qxl", "qxb")
      val `application∕vnd·realvnc·bed`: MimeType by mime("bed")
      val `application∕vnd·recordare·musicxml`: MimeType by mime("mxl")
      val `application∕vnd·recordare·musicxml+xml`: MimeType by mime("musicxml")
      val `application∕vnd·rig·cryptonote`: MimeType by mime("cryptonote")
      val `application∕vnd·rim·cod`: MimeType by mime("cod")
      val `application∕vnd·rn-realmedia`: MimeType by mime("rm")
      val `application∕vnd·rn-realmedia-vbr`: MimeType by mime("rmvb")
      val `application∕vnd·route66·link66+xml`: MimeType by mime("link66")
      val `application∕vnd·sailingtracker·track`: MimeType by mime("st")
      val `application∕vnd·seemail`: MimeType by mime("see")
      val `application∕vnd·sema`: MimeType by mime("sema")
      val `application∕vnd·semd`: MimeType by mime("semd")
      val `application∕vnd·semf`: MimeType by mime("semf")
      val `application∕vnd·shana·informed·formdata`: MimeType by mime("ifm")
      val `application∕vnd·shana·informed·formtemplate`: MimeType by mime("itp")
      val `application∕vnd·shana·informed·interchange`: MimeType by mime("iif")
      val `application∕vnd·shana·informed·package`: MimeType by mime("ipk")
      val `application∕vnd·simtech-mindmapper`: MimeType by mime("twd", "twds")
      val `application∕vnd·smaf`: MimeType by mime("mmf")
      val `application∕vnd·smart·teacher`: MimeType by mime("teacher")
      val `application∕vnd·solent·sdkm+xml`: MimeType by mime("sdkm", "sdkd")
      val `application∕vnd·spotfire·dxp`: MimeType by mime("dxp")
      val `application∕vnd·spotfire·sfs`: MimeType by mime("sfs")
      val `application∕vnd·stardivision·calc`: MimeType by mime("sdc")
      val `application∕vnd·stardivision·draw`: MimeType by mime("sda")
      val `application∕vnd·stardivision·impress`: MimeType by mime("sdd")
      val `application∕vnd·stardivision·math`: MimeType by mime("smf")
      val `application∕vnd·stardivision·writer`: MimeType by mime("sdw", "vor")
      val `application∕vnd·stardivision·writer-global`: MimeType by mime("sgl")
      val `application∕vnd·stepmania·package`: MimeType by mime("smzip")
      val `application∕vnd·stepmania·stepchart`: MimeType by mime("sm")
      val `application∕vnd·sun·xml·calc`: MimeType by mime("sxc")
      val `application∕vnd·sun·xml·calc·template`: MimeType by mime("stc")
      val `application∕vnd·sun·xml·draw`: MimeType by mime("sxd")
      val `application∕vnd·sun·xml·draw·template`: MimeType by mime("std")
      val `application∕vnd·sun·xml·impress`: MimeType by mime("sxi")
      val `application∕vnd·sun·xml·impress·template`: MimeType by mime("sti")
      val `application∕vnd·sun·xml·math`: MimeType by mime("sxm")
      val `application∕vnd·sun·xml·writer`: MimeType by mime("sxw")
      val `application∕vnd·sun·xml·writer·global`: MimeType by mime("sxg")
      val `application∕vnd·sun·xml·writer·template`: MimeType by mime("stw")
      val `application∕vnd·sus-calendar`: MimeType by mime("sus", "susp")
      val `application∕vnd·svd`: MimeType by mime("svd")
      val `application∕vnd·symbian·install`: MimeType by mime("sis", "sisx")
      val `application∕vnd·syncml+xml`: MimeType by mime("xsm")
      val `application∕vnd·syncml·dm+wbxml`: MimeType by mime("bdm")
      val `application∕vnd·syncml·dm+xml`: MimeType by mime("xdm")
      val `application∕vnd·tao·intent-module-archive`: MimeType by mime("tao")
      val `application∕vnd·tcpdump·pcap`: MimeType by mime("pcap", "cap", "dmp")
      val `application∕vnd·tmobile-livetv`: MimeType by mime("tmo")
      val `application∕vnd·trid·tpt`: MimeType by mime("tpt")
      val `application∕vnd·triscape·mxs`: MimeType by mime("mxs")
      val `application∕vnd·trueapp`: MimeType by mime("tra")
      val `application∕vnd·ufdl`: MimeType by mime("ufd", "ufdl")
      val `application∕vnd·uiq·theme`: MimeType by mime("utz")
      val `application∕vnd·umajin`: MimeType by mime("umj")
      val `application∕vnd·unity`: MimeType by mime("unityweb")
      val `application∕vnd·uoml+xml`: MimeType by mime("uoml")
      val `application∕vnd·vcx`: MimeType by mime("vcx")
      val `application∕vnd·visio`: MimeType by mime("vsd", "vst", "vss", "vsw")
      val `application∕vnd·visionary`: MimeType by mime("vis")
      val `application∕vnd·vsf`: MimeType by mime("vsf")
      val `application∕vnd·wap·wbxml`: MimeType by mime("wbxml")
      val `application∕vnd·wap·wmlc`: MimeType by mime("wmlc")
      val `application∕vnd·wap·wmlscriptc`: MimeType by mime("wmlsc")
      val `application∕vnd·webturbo`: MimeType by mime("wtb")
      val `application∕vnd·wolfram·player`: MimeType by mime("nbp")
      val `application∕vnd·wordperfect`: MimeType by mime("wpd")
      val `application∕vnd·wqd`: MimeType by mime("wqd")
      val `application∕vnd·wt·stf`: MimeType by mime("stf")
      val `application∕vnd·xara`: MimeType by mime("xar")
      val `application∕vnd·xfdl`: MimeType by mime("xfdl")
      val `application∕vnd·yamaha·hv-dic`: MimeType by mime("hvd")
      val `application∕vnd·yamaha·hv-script`: MimeType by mime("hvs")
      val `application∕vnd·yamaha·hv-voice`: MimeType by mime("hvp")
      val `application∕vnd·yamaha·openscoreformat`: MimeType by mime("osf")
      val `application∕vnd·yamaha·openscoreformat·osfpvg+xml`: MimeType by mime("osfpvg")
      val `application∕vnd·yamaha·smaf-audio`: MimeType by mime("saf")
      val `application∕vnd·yamaha·smaf-phrase`: MimeType by mime("spf")
      val `application∕vnd·yellowriver-custom-menu`: MimeType by mime("cmp")
      val `application∕vnd·zul`: MimeType by mime("zir", "zirz")
      val `application∕vnd·zzazz·deck+xml`: MimeType by mime("zaz")
      val `application∕voicexml+xml`: MimeType by mime("vxml")
      val `application∕widget`: MimeType by mime("wgt")
      val `application∕winhlp`: MimeType by mime("hlp")
      val `application∕wsdl+xml`: MimeType by mime("wsdl")
      val `application∕wspolicy+xml`: MimeType by mime("wspolicy")
      val `application∕x-7z-compressed`: MimeType by mime("7z")
      val `application∕x-abiword`: MimeType by mime("abw")
      val `application∕x-ace-compressed`: MimeType by mime("ace")
      val `application∕x-apple-diskimage`: MimeType by mime("dmg")
      val `application∕x-authorware-bin`: MimeType by mime("aab", "x32", "u32", "vox")
      val `application∕x-authorware-map`: MimeType by mime("aam")
      val `application∕x-authorware-seg`: MimeType by mime("aas")
      val `application∕x-bcpio`: MimeType by mime("bcpio")
      val `application∕x-bittorrent`: MimeType by mime("torrent")
      val `application∕x-blorb`: MimeType by mime("blb", "blorb")
      val `application∕x-bzip`: MimeType by mime("bz")
      val `application∕x-bzip2`: MimeType by mime("bz2", "boz")
      val `application∕x-cbr`: MimeType by mime("cbr", "cba", "cbt", "cbz", "cb7")
      val `application∕x-cdlink`: MimeType by mime("vcd")
      val `application∕x-cfs-compressed`: MimeType by mime("cfs")
      val `application∕x-chat`: MimeType by mime("chat")
      val `application∕x-chess-pgn`: MimeType by mime("pgn")
      val `application∕x-conference`: MimeType by mime("nsc")
      val `application∕x-cpio`: MimeType by mime("cpio")
      val `application∕x-csh`: MimeType by mime("csh")
      val `application∕x-debian-package`: MimeType by mime("deb", "udeb")
      val `application∕x-dgc-compressed`: MimeType by mime("dgc")
      val `application∕x-director`: MimeType by mime("dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa")
      val `application∕x-doom`: MimeType by mime("wad")
      val `application∕x-dtbncx+xml`: MimeType by mime("ncx")
      val `application∕x-dtbook+xml`: MimeType by mime("dtb")
      val `application∕x-dtbresource+xml`: MimeType by mime("res")
      val `application∕x-dvi`: MimeType by mime("dvi")
      val `application∕x-envoy`: MimeType by mime("evy")
      val `application∕x-eva`: MimeType by mime("eva")
      val `application∕x-font-bdf`: MimeType by mime("bdf")
      val `application∕x-font-ghostscript`: MimeType by mime("gsf")
      val `application∕x-font-linux-psf`: MimeType by mime("psf")
      val `application∕x-font-otf`: MimeType by mime("otf")
      val `application∕x-font-pcf`: MimeType by mime("pcf")
      val `application∕x-font-snf`: MimeType by mime("snf")
      val `application∕x-font-ttf`: MimeType by mime("ttf", "ttc")
      val `application∕x-font-type1`: MimeType by mime("pfa", "pfb", "pfm", "afm")
      val `application∕font-woff`: MimeType by mime("woff")
      val `application∕x-freearc`: MimeType by mime("arc")
      val `application∕x-futuresplash`: MimeType by mime("spl")
      val `application∕x-gca-compressed`: MimeType by mime("gca")
      val `application∕x-glulx`: MimeType by mime("ulx")
      val `application∕x-gnumeric`: MimeType by mime("gnumeric")
      val `application∕x-gramps-xml`: MimeType by mime("gramps")
      val `application∕x-gtar`: MimeType by mime("gtar")
      val `application∕x-hdf`: MimeType by mime("hdf")
      val `application∕x-install-instructions`: MimeType by mime("install")
      val `application∕x-iso9660-image`: MimeType by mime("iso")
      val `application∕x-java-jnlp-file`: MimeType by mime("jnlp")
      val `application∕x-latex`: MimeType by mime("latex")
      val `application∕x-lzh-compressed`: MimeType by mime("lzh", "lha")
      val `application∕x-mie`: MimeType by mime("mie")
      val `application∕x-mobipocket-ebook`: MimeType by mime("prc", "mobi")
      val `application∕x-mpegurl`: MimeType = `application∕mpegurl`
      val `application∕x-ms-application`: MimeType by mime("application")
      val `application∕x-ms-shortcut`: MimeType by mime("lnk")
      val `application∕x-ms-wmd`: MimeType by mime("wmd")
      val `application∕x-ms-wmz`: MimeType by mime("wmz")
      val `application∕x-ms-xbap`: MimeType by mime("xbap")
      val `application∕x-msaccess`: MimeType by mime("mdb")
      val `application∕x-msbinder`: MimeType by mime("obd")
      val `application∕x-mscardfile`: MimeType by mime("crd")
      val `application∕x-msclip`: MimeType by mime("clp")
      val `application∕x-msdownload`: MimeType by mime("exe", "dll", "com", "bat", "msi")
      val `application∕x-msmediaview`: MimeType by mime("mvb", "m13", "m14")
      val `application∕x-msmetafile`: MimeType by mime("wmf", "wmz", "emf", "emz")
      val `application∕x-msmoney`: MimeType by mime("mny")
      val `application∕x-mspublisher`: MimeType by mime("pub")
      val `application∕x-msschedule`: MimeType by mime("scd")
      val `application∕x-msterminal`: MimeType by mime("trm")
      val `application∕x-mswrite`: MimeType by mime("wri")
      val `application∕x-netcdf`: MimeType by mime("nc", "cdf")
      val `application∕x-nzb`: MimeType by mime("nzb")
      val `application∕x-pkcs12`: MimeType by mime("p12", "pfx")
      val `application∕x-pkcs7-certificates`: MimeType by mime("p7b", "spc")
      val `application∕x-pkcs7-certreqresp`: MimeType by mime("p7r")
      val `application∕x-rar-compressed`: MimeType by mime("rar")
      val `application∕x-research-info-systems`: MimeType by mime("ris")
      val `application∕x-sh`: MimeType by mime("sh")
      val `application∕x-shar`: MimeType by mime("shar")
      val `application∕x-shockwave-flash`: MimeType by mime("swf")
      val `application∕x-silverlight-app`: MimeType by mime("xap")
      val `application∕x-sql`: MimeType by mime("sql")
      val `application∕x-stuffit`: MimeType by mime("sit")
      val `application∕x-stuffitx`: MimeType by mime("sitx")
      val `application∕x-subrip`: MimeType by mime("srt")
      val `application∕x-sv4cpio`: MimeType by mime("sv4cpio")
      val `application∕x-sv4crc`: MimeType by mime("sv4crc")
      val `application∕x-t3vm-image`: MimeType by mime("t3")
      val `application∕x-tads`: MimeType by mime("gam")
      val `application∕x-tar`: MimeType by mime("tar")
      val `application∕x-tcl`: MimeType by mime("tcl")
      val `application∕x-tex`: MimeType by mime("tex")
      val `application∕x-tex-tfm`: MimeType by mime("tfm")
      val `application∕x-texinfo`: MimeType by mime("texinfo", "texi")
      val `application∕x-tgif`: MimeType by mime("obj")
      val `application∕x-ustar`: MimeType by mime("ustar")
      val `application∕x-wais-source`: MimeType by mime("src")
      val `application∕x-x509-ca-cert`: MimeType by mime("der", "crt")
      val `application∕x-xfig`: MimeType by mime("fig")
      val `application∕x-xliff+xml`: MimeType by mime("xlf")
      val `application∕x-xpinstall`: MimeType by mime("xpi")
      val `application∕x-xz`: MimeType by mime("xz")
      val `application∕x-zmachine`: MimeType by mime("z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8")
      val `application∕xaml+xml`: MimeType by mime("xaml")
      val `application∕xcap-diff+xml`: MimeType by mime("xdf")
      val `application∕xenc+xml`: MimeType by mime("xenc")
      val `application∕xhtml+xml`: MimeType by mime("xhtml", "xht")
      val `application∕xml`: MimeType by mime("xml", "xsl")
      val `application∕xml-dtd`: MimeType by mime("dtd")
      val `application∕xop+xml`: MimeType by mime("xop")
      val `application∕xproc+xml`: MimeType by mime("xpl")
      val `application∕xslt+xml`: MimeType by mime("xslt")
      val `application∕xspf+xml`: MimeType by mime("xspf")
      val `application∕xv+xml`: MimeType by mime("mxml", "xhvml", "xvml", "xvm")
      val `application∕yang`: MimeType by mime("yang")
      val `application∕yin+xml`: MimeType by mime("yin")
      val `application∕zip`: MimeType by mime("zip")
      val `audio∕adpcm`: MimeType by mime("adp")
      val `audio∕basic`: MimeType by mime("au", "snd")
      val `audio∕midi`: MimeType by mime("mid", "midi", "kar", "rmi")
      val `audio∕mp4`: MimeType by mime("mp4a", "m4a")
      val `audio∕mpeg`: MimeType by mime("mpga", "mp2", "mp2a", "mp3", "m2a", "m3a")
      val `audio∕mpegurl`: MimeType = `application∕mpegurl`
      val `audio∕ogg`: MimeType by mime("oga", "ogg", "spx")
      val `audio∕s3m`: MimeType by mime("s3m")
      val `audio∕silk`: MimeType by mime("sil")
      val `audio∕vnd·dece·audio`: MimeType by mime("uva", "uvva")
      val `audio∕vnd·digital-winds`: MimeType by mime("eol")
      val `audio∕vnd·dra`: MimeType by mime("dra")
      val `audio∕vnd·dts`: MimeType by mime("dts")
      val `audio∕vnd·dts·hd`: MimeType by mime("dtshd")
      val `audio∕vnd·lucent·voice`: MimeType by mime("lvp")
      val `audio∕vnd·ms-playready·media·pya`: MimeType by mime("pya")
      val `audio∕vnd·nuera·ecelp4800`: MimeType by mime("ecelp4800")
      val `audio∕vnd·nuera·ecelp7470`: MimeType by mime("ecelp7470")
      val `audio∕vnd·nuera·ecelp9600`: MimeType by mime("ecelp9600")
      val `audio∕vnd·rip`: MimeType by mime("rip")
      val `audio∕webm`: MimeType by mime("weba")
      val `audio∕x-aac`: MimeType by mime("aac")
      val `audio∕x-aiff`: MimeType by mime("aif", "aiff", "aifc")
      val `audio∕x-caf`: MimeType by mime("caf")
      val `audio∕x-flac`: MimeType by mime("flac")
      val `audio∕x-matroska`: MimeType by mime("mka")
      val `audio∕x-mpegurl`: MimeType = `application∕mpegurl`
      val `audio∕x-ms-wax`: MimeType by mime("wax")
      val `audio∕x-ms-wma`: MimeType by mime("wma")
      val `audio∕x-pn-realaudio`: MimeType by mime("ram", "ra")
      val `audio∕x-pn-realaudio-plugin`: MimeType by mime("rmp")
      val `audio∕x-wav`: MimeType by mime("wav")
      val `audio∕xm`: MimeType by mime("xm")
      val `chemical∕x-cdx`: MimeType by mime("cdx")
      val `chemical∕x-cif`: MimeType by mime("cif")
      val `chemical∕x-cmdf`: MimeType by mime("cmdf")
      val `chemical∕x-cml`: MimeType by mime("cml")
      val `chemical∕x-csml`: MimeType by mime("csml")
      val `chemical∕x-xyz`: MimeType by mime("xyz")
      val `image∕bmp`: MimeType by mime("bmp")
      val `image∕cgm`: MimeType by mime("cgm")
      val `image∕g3fax`: MimeType by mime("g3")
      val `image∕gif`: MimeType by mime("gif")
      val `image∕ief`: MimeType by mime("ief")
      val `image∕jpeg`: MimeType by mime("jpeg", "jpg", "jpe")
      val `image∕ktx`: MimeType by mime("ktx")
      val `image∕png`: MimeType by mime("png")
      val `image∕prs·btif`: MimeType by mime("btif")
      val `image∕sgi`: MimeType by mime("sgi")
      val `image∕svg+xml`: MimeType by mime("svg", "svgz")
      val `image∕tiff`: MimeType by mime("tiff", "tif")
      val `image∕vnd·adobe·photoshop`: MimeType by mime("psd")
      val `image∕vnd·dece·graphic`: MimeType by mime("uvi", "uvvi", "uvg", "uvvg")
      val `image∕vnd·dvb·subtitle`: MimeType by mime("sub")
      val `image∕vnd·djvu`: MimeType by mime("djvu", "djv")
      val `image∕vnd·dwg`: MimeType by mime("dwg")
      val `image∕vnd·dxf`: MimeType by mime("dxf")
      val `image∕vnd·fastbidsheet`: MimeType by mime("fbs")
      val `image∕vnd·fpx`: MimeType by mime("fpx")
      val `image∕vnd·fst`: MimeType by mime("fst")
      val `image∕vnd·fujixerox·edmics-mmr`: MimeType by mime("mmr")
      val `image∕vnd·fujixerox·edmics-rlc`: MimeType by mime("rlc")
      val `image∕vnd·ms-modi`: MimeType by mime("mdi")
      val `image∕vnd·ms-photo`: MimeType by mime("wdp")
      val `image∕vnd·net-fpx`: MimeType by mime("npx")
      val `image∕vnd·wap·wbmp`: MimeType by mime("wbmp")
      val `image∕vnd·xiff`: MimeType by mime("xif")
      val `image∕webp`: MimeType by mime("webp")
      val `image∕x-3ds`: MimeType by mime("3ds")
      val `image∕x-cmu-raster`: MimeType by mime("ras")
      val `image∕x-cmx`: MimeType by mime("cmx")
      val `image∕x-freehand`: MimeType by mime("fh", "fhc", "fh4", "fh5", "fh7")
      val `image∕x-icon`: MimeType by mime("ico")
      val `image∕x-mrsid-image`: MimeType by mime("sid")
      val `image∕x-pcx`: MimeType by mime("pcx")
      val `image∕x-pict`: MimeType by mime("pic", "pct")
      val `image∕x-portable-anymap`: MimeType by mime("pnm")
      val `image∕x-portable-bitmap`: MimeType by mime("pbm")
      val `image∕x-portable-graymap`: MimeType by mime("pgm")
      val `image∕x-portable-pixmap`: MimeType by mime("ppm")
      val `image∕x-rgb`: MimeType by mime("rgb")
      val `image∕x-tga`: MimeType by mime("tga")
      val `image∕x-xbitmap`: MimeType by mime("xbm")
      val `image∕x-xpixmap`: MimeType by mime("xpm")
      val `image∕x-xwindowdump`: MimeType by mime("xwd")
      val `message∕rfc822`: MimeType by mime("eml", "mime")
      val `model∕iges`: MimeType by mime("igs", "iges")
      val `model∕mesh`: MimeType by mime("msh", "mesh", "silo")
      val `model∕vnd·collada+xml`: MimeType by mime("dae")
      val `model∕vnd·dwf`: MimeType by mime("dwf")
      val `model∕vnd·gdl`: MimeType by mime("gdl")
      val `model∕vnd·gtw`: MimeType by mime("gtw")
      val `model∕vnd·mts`: MimeType by mime("mts")
      val `model∕vnd·vtu`: MimeType by mime("vtu")
      val `model∕vrml`: MimeType by mime("wrl", "vrml")
      val `model∕x3d+binary`: MimeType by mime("x3db", "x3dbz")
      val `model∕x3d+vrml`: MimeType by mime("x3dv", "x3dvz")
      val `model∕x3d+xml`: MimeType by mime("x3d", "x3dz")
      val `text∕cache-manifest`: MimeType by mime("appcache")
      val `text∕calendar`: MimeType by mime("ics", "ifb")
      val `text∕css`: MimeType by mime("css")
      val `text∕csv`: MimeType by mime("csv")
      val `text∕html`: MimeType by mime("html", "htm")
      val `text∕n3`: MimeType by mime("n3")
      val `text∕plain`: MimeType by mime("txt", "text", "conf", "def", "list", "log", "in", "srt", "ass", "ssa")
      val `text∕prs·lines·tag`: MimeType by mime("dsc")
      val `text∕richtext`: MimeType by mime("rtx")
      val `text∕sgml`: MimeType by mime("sgml", "sgm")
      val `text∕tab-separated-values`: MimeType by mime("tsv")
      val `text∕troff`: MimeType by mime("t", "tr", "roff", "man", "me", "ms")
      val `text∕turtle`: MimeType by mime("ttl")
      val `text∕uri-list`: MimeType by mime("uri", "uris", "urls")
      val `text∕vcard`: MimeType by mime("vcard")
      val `text∕vnd·curl`: MimeType by mime("curl")
      val `text∕vnd·curl·dcurl`: MimeType by mime("dcurl")
      val `text∕vnd·curl·scurl`: MimeType by mime("scurl")
      val `text∕vnd·curl·mcurl`: MimeType by mime("mcurl")
      val `text∕vnd·dvb·subtitle`: MimeType by mime("sub")
      val `text∕vnd·fly`: MimeType by mime("fly")
      val `text∕vnd·fmi·flexstor`: MimeType by mime("flx")
      val `text∕vnd·graphviz`: MimeType by mime("gv")
      val `text∕vnd·in3d·3dml`: MimeType by mime("3dml")
      val `text∕vnd·in3d·spot`: MimeType by mime("spot")
      val `text∕vnd·sun·j2me·app-descriptor`: MimeType by mime("jad")
      val `text∕vnd·wap·wml`: MimeType by mime("wml")
      val `text∕vnd·wap·wmlscript`: MimeType by mime("wmls")
      val `text∕x-asm`: MimeType by mime("s", "asm")
      val `text∕x-c`: MimeType by mime("c", "cc", "cxx", "cpp", "h", "hh", "dic")
      val `text∕x-fortran`: MimeType by mime("f", "for", "f77", "f90")
      val `text∕x-java-source`: MimeType by mime("java")
      val `text∕x-opml`: MimeType by mime("opml")
      val `text∕x-pascal`: MimeType by mime("p", "pas")
      val `text∕x-nfo`: MimeType by mime("nfo")
      val `text∕x-setext`: MimeType by mime("etx")
      val `text∕x-sfv`: MimeType by mime("sfv")
      val `text∕x-uuencode`: MimeType by mime("uu")
      val `text∕x-vcalendar`: MimeType by mime("vcs")
      val `text∕x-vcard`: MimeType by mime("vcf")
      val `video∕3gpp`: MimeType by mime("3gp")
      val `video∕3gpp2`: MimeType by mime("3g2")
      val `video∕h261`: MimeType by mime("h261")
      val `video∕h263`: MimeType by mime("h263")
      val `video∕h264`: MimeType by mime("h264")
      val `video∕jpeg`: MimeType by mime("jpgv")
      val `video∕jpm`: MimeType by mime("jpm", "jpgm")
      val `video∕mj2`: MimeType by mime("mj2", "mjp2")
      val `video∕mp4`: MimeType by mime("mp4", "mp4v", "mpg4")
      val `video∕mpeg`: MimeType by mime("mpeg", "mpg", "mpe", "m1v", "m2v")
      val `video∕ogg`: MimeType by mime("ogv")
      val `video∕quicktime`: MimeType by mime("qt", "mov")
      val `video∕vnd·dece·hd`: MimeType by mime("uvh", "uvvh")
      val `video∕vnd·dece·mobile`: MimeType by mime("uvm", "uvvm")
      val `video∕vnd·dece·pd`: MimeType by mime("uvp", "uvvp")
      val `video∕vnd·dece·sd`: MimeType by mime("uvs", "uvvs")
      val `video∕vnd·dece·video`: MimeType by mime("uvv", "uvvv")
      val `video∕vnd·dvb·file`: MimeType by mime("dvb")
      val `video∕vnd·fvt`: MimeType by mime("fvt")
      val `video∕vnd·mpegurl`: MimeType by mime("mxu", "m4u")
      val `video∕vnd·ms-playready·media·pyv`: MimeType by mime("pyv")
      val `video∕vnd·uvvu·mp4`: MimeType by mime("uvu", "uvvu")
      val `video∕vnd·vivo`: MimeType by mime("viv")
      val `video∕webm`: MimeType by mime("webm")
      val `video∕x-f4v`: MimeType by mime("f4v")
      val `video∕x-fli`: MimeType by mime("fli")
      val `video∕x-flv`: MimeType by mime("flv")
      val `video∕x-m4v`: MimeType by mime("m4v")
      val `video∕x-matroska`: MimeType by mime("mkv", "mk3d", "mks")
      val `video∕x-mng`: MimeType by mime("mng")
      val `video∕x-ms-asf`: MimeType by mime("asf", "asx")
      val `video∕x-ms-vob`: MimeType by mime("vob")
      val `video∕x-ms-wm`: MimeType by mime("wm")
      val `video∕x-ms-wmv`: MimeType by mime("wmv")
      val `video∕x-ms-wmx`: MimeType by mime("wmx")
      val `video∕x-ms-wvx`: MimeType by mime("wvx")
      val `video∕x-msvideo`: MimeType by mime("avi")
      val `video∕x-sgi-movie`: MimeType by mime("movie")
      val `video∕x-smv`: MimeType by mime("smv")
      val `x-conference∕x-cooltalk`: MimeType by mime("ice")
   }

}